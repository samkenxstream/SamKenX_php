{"id":"datastore\/datastoresessionhandler","type":"","title":"Google\\Cloud\\Datastore\\DatastoreSessionHandler","name":"DatastoreSessionHandler","description":"<p>Custom session handler backed by Cloud Datastore.<\/p>\n<p>Instead of storing the session data in a local file, this handler stores the\ndata in Cloud Datastore. The biggest benefit of doing this is the data can be\nshared by multiple instances, making it suitable for cloud applications.<\/p>\n<p>The downside of using Cloud Datastore is that write operations will cost you\nsome money, so it is highly recommended to minimize the write operations\nwhile using this handler. In order to do so, keep the data in the session as\nlimited as possible; for example, it is ok to put only signed-in state and\nthe user id in the session with this handler. However, for example, it is\ndefinitely not recommended that you store your application's whole undo\nhistory in the session, because every user operation will cause a Datastore\nwrite, potentially costing you a lot of money.<\/p>\n<p>This handler doesn't provide pessimistic lock for session data. Instead, it\nuses Datastore Transaction for data consistency. This means that if\nmultiple requests are modifying the same session data simultaneously, there\nwill be more probablity that some of the <code>write<\/code> operations will fail.<\/p>\n<p>If you are building an ajax application which may issue multiple requests\nto the server, please design your session data carefully in order to avoid\npossible data contentions. Also please see the 2nd example below for how to\nproperly handle errors on <code>write<\/code> operations.<\/p>\n<p>The handler sets the Datastore namespace to the value of session.save_path,\nisolating the session data from your application data, it also uses the\nsession.name as the Datastore kind, and the session id as the Datastore id.\nBy default, it does nothing on gc for reducing the cost. Pass positive value\nup to 1000 for $gcLimit parameter to delete entities in gc.<\/p>\n<p>Note: The datastore transaction only lasts 60 seconds. If this handler is\nused for long running requests, it will fail on <code>write<\/code>.<\/p>\n<p>The first example automatically writes the session data. It's handy, but\nthe code doesn't stop even if it fails to write the session data, because\nthe <code>write<\/code> happens when the code exits. If you want to know whether the\nsession data is correctly written to the Datastore, you need to call\n<code>session_write_close()<\/code> explicitly and then handle <code>E_USER_WARNING<\/code>\nproperly. See the second example for a demonstration.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Datastore\\DatastoreClient;\nuse Google\\Cloud\\Datastore\\DatastoreSessionHandler;\n\n$datastore = new DatastoreClient();\n\n$handler = new DatastoreSessionHandler($datastore);\n\nsession_set_save_handler($handler, true);\nsession_save_path('sessions');\nsession_start();\n\n\/\/ Then write and read the $_SESSION array.\n$_SESSION['name'] = 'Bob';\necho $_SESSION['name'];"},{"caption":"<p>Session Handler with Error Handling<\/p>","code":"use Google\\Cloud\\Datastore\\DatastoreClient;\nuse Google\\Cloud\\Datastore\\DatastoreSessionHandler;\n\n$datastore = new DatastoreClient();\n\n$handler = new DatastoreSessionHandler($datastore);\nsession_set_save_handler($handler, true);\nsession_save_path('sessions');\nsession_start();\n\n\/\/ Then read and write the $_SESSION array.\n$_SESSION['name'] = 'Bob';\n\nfunction handle_session_error($errNo, $errStr, $errFile, $errLine) {\n    \/\/ We throw an exception here, but you can do whatever you need.\n    throw new RuntimeException(\"$errStr in $errFile on line $errLine\", $errNo);\n}\n\nset_error_handler('handle_session_error', E_USER_WARNING);\n\/\/ If `write` fails for any reason, an exception will be thrown.\nsession_write_close();\nrestore_error_handler();\n\n\/\/ You can still read the $_SESSION array after closing the session.\necho $_SESSION['name'];"}],"resources":[{"title":"SessionHandlerInterface","link":"http:\/\/php.net\/manual\/en\/class.sessionhandlerinterface.php"}],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Datastore\/src\/DatastoreSessionHandler.php#L157","description":"<p>Create a custom session handler backed by Cloud Datastore.<\/p>","examples":[],"resources":[],"params":[{"name":"datastore","description":"<p>Datastore client.<\/p>","types":["<a data-custom-type=\"cloud-datastore\/v1.15.0\/datastore\/datastoreclient\">Google\\Cloud\\Datastore\\DatastoreClient<\/a>"],"optional":false,"nullable":null},{"name":"gcLimit","description":"<p>A number of entities to delete in the\ngarbage collection.  Defaults to 0 which means it does nothing.\nThe value larger than 1000 will be cut down to 1000.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":true,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.entityOptions","description":"<p>Default options to be passed to the <a data-custom-type=\"cloud-datastore\/v1.15.0\/datastore\/datastoreclient\" data-method=\"entity\">Google\\Cloud\\Datastore\\DatastoreClient::entity()<\/a> method when writing session data to Datastore. If not specified, defaults to <code>['excludeFromIndexes' =&gt; ['data']]<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"open","type":"instance","name":"open","source":"Datastore\/src\/DatastoreSessionHandler.php#L192","description":"<p>Start a session, by creating a transaction for the later <code>write<\/code>.<\/p>","examples":[],"resources":[],"params":[{"name":"savePath","description":"<p>The value of <code>session.save_path<\/code> setting will be\nused here. It will use this value as the Datastore namespaceId.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"sessionName","description":"<p>The value of <code>session.name<\/code> setting will be\nused here. It will use this value as the Datastore kind.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"close","type":"instance","name":"close","source":"Datastore\/src\/DatastoreSessionHandler.php#L210","description":"<p>Just return true for this implementation.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"read","type":"instance","name":"read","source":"Datastore\/src\/DatastoreSessionHandler.php#L219","description":"<p>Read the session data from Cloud Datastore.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"write","type":"instance","name":"write","source":"Datastore\/src\/DatastoreSessionHandler.php#L249","description":"<p>Write the session data to Cloud Datastore.<\/p>","examples":[],"resources":[],"params":[{"name":"id","description":"<p>Identifier used to construct a <a data-custom-type=\"cloud-datastore\/v1.15.0\/datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>\nfor the <a data-custom-type=\"cloud-datastore\/v1.15.0\/datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a> to be written.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The session data to write to the <a data-custom-type=\"cloud-datastore\/v1.15.0\/datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"destroy","type":"instance","name":"destroy","source":"Datastore\/src\/DatastoreSessionHandler.php#L281","description":"<p>Delete the session data from Cloud Datastore.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"gc","type":"instance","name":"gc","source":"Datastore\/src\/DatastoreSessionHandler.php#L305","description":"<p>Delete the old session data from Cloud Datastore.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]}]}