{"id":"videointelligence\/v1beta2\/readme","type":"guide","title":"Google Cloud Video Intelligence V1beta2 generated client for PHP","name":"Google Cloud Video Intelligence V1beta2 generated client for PHP","description":"<body>\n<h3>Sample<\/h3>\n<pre><code class=\"language-php\">require 'vendor\/autoload.php';\n\nuse Google\\Cloud\\VideoIntelligence\\V1beta2\\VideoIntelligenceServiceClient;\n\n$videoIntelligenceServiceClient = new VideoIntelligenceServiceClient();\ntry {\n    $inputUri = 'gs:\/\/demomaker\/cat.mp4';\n    $featuresElement = Feature::LABEL_DETECTION;\n    $features = [$featuresElement];\n    $operationResponse = $videoIntelligenceServiceClient-&gt;annotateVideo(['inputUri' =&gt; $inputUri, 'features' =&gt; $features]);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n        \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n\n    \/\/ OR start the operation, keep the operation name, and resume later\n    $operationResponse = $videoIntelligenceServiceClient-&gt;annotateVideo(['inputUri' =&gt; $inputUri, 'features' =&gt; $features]);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $videoIntelligenceServiceClient-&gt;resumeOperation($operationName, 'annotateVideo');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n        \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $videoIntelligenceServiceClient-&gt;close();\n}<\/code><\/pre><\/body>","methods":[]}