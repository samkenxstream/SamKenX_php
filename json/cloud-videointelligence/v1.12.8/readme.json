{"id":"videointelligence\/readme","type":"guide","title":"Google Cloud Video Intelligence for PHP","name":"Google Cloud Video Intelligence for PHP","description":"<body>\n\n\n\n\n<p>Allows developers to use Google video analysis technology as part of their applications. The REST API enables users to\nannotate videos stored locally or in Google Cloud Storage with contextual information at the level of the entire video,\nper segment, per shot, and per frame.<\/p>\n<p><strong>NOTE:<\/strong> This documentation covers the most recent stable release (V1). There is an additional beta release included\nin this component. To check out its documentation, see the link below:<\/p>\n<ul>\n<li><a href=\"https:\/\/googleapis.github.io\/google-cloud-php\/#\/docs\/google-cloud\/latest\/videointelligence\/v1beta2\/videointelligenceserviceclient\">VideoIntelligence V1beta2 client<\/a><\/li>\n<\/ul>\n<h3>Installation<\/h3>\n<p>To begin, install the preferred dependency manager for PHP, <a href=\"https:\/\/getcomposer.org\/\">Composer<\/a>.<\/p>\n<p>Now to install just this component:<\/p>\n<pre><code class=\"language-sh\">$ composer require google\/cloud-videointelligence<\/code><\/pre>\n<p>Or to install the entire suite of components at once:<\/p>\n<pre><code class=\"language-sh\">$ composer require google\/cloud<\/code><\/pre>\n<p>This component supports both REST over HTTP\/1.1 and gRPC. In order to take advantage of the benefits offered by gRPC (such as streaming methods)\nplease see our <a href=\"https:\/\/cloud.google.com\/php\/grpc\">gRPC installation guide<\/a>.<\/p>\n<h3>Authentication<\/h3>\n<p>Please see our <a href=\"https:\/\/github.com\/googleapis\/google-cloud-php\/blob\/main\/AUTHENTICATION.md\">Authentication guide<\/a> for more information\non authenticating your client. Once authenticated, you'll be ready to start making requests.<\/p>\n<h3>Sample<\/h3>\n<pre><code class=\"language-php\">require __DIR__ . '\/vendor\/autoload.php';\n\nuse Google\\Cloud\\VideoIntelligence\\V1\\VideoIntelligenceServiceClient;\nuse Google\\Cloud\\VideoIntelligence\\V1\\Feature;\n\n$videoIntelligenceServiceClient = new VideoIntelligenceServiceClient();\n\n$inputUri = \"gs:\/\/example-bucket\/example-video.mp4\";\n\n$features = [\n    Feature::LABEL_DETECTION,\n];\n$operationResponse = $videoIntelligenceServiceClient-&gt;annotateVideo([\n    'inputUri' =&gt; $inputUri,\n    'features' =&gt; $features\n]);\n$operationResponse-&gt;pollUntilComplete();\nif ($operationResponse-&gt;operationSucceeded()) {\n    $results = $operationResponse-&gt;getResult();\n    foreach ($results-&gt;getAnnotationResults() as $result) {\n        echo 'Segment labels' . PHP_EOL;\n        foreach ($result-&gt;getSegmentLabelAnnotations() as $labelAnnotation) {\n            echo \"Label: \" . $labelAnnotation-&gt;getEntity()-&gt;getDescription()\n                . PHP_EOL;\n        }\n        echo 'Shot labels' . PHP_EOL;\n        foreach ($result-&gt;getShotLabelAnnotations() as $labelAnnotation) {\n            echo \"Label: \" . $labelAnnotation-&gt;getEntity()-&gt;getDescription()\n                . PHP_EOL;\n        }\n        echo 'Frame labels' . PHP_EOL;\n        foreach ($result-&gt;getFrameLabelAnnotations() as $labelAnnotation) {\n            echo \"Label: \" . $labelAnnotation-&gt;getEntity()-&gt;getDescription()\n                . PHP_EOL;\n        }\n    }\n} else {\n    $error = $operationResponse-&gt;getError();\n    echo \"error: \" . $error-&gt;getMessage() . PHP_EOL;\n\n}<\/code><\/pre>\n<h3>Version<\/h3>\n<p>This component is considered GA (generally available). As such, it will not introduce backwards-incompatible changes in\nany minor or patch releases. We will address issues and requests with the highest priority.<\/p>\n<h3>Next Steps<\/h3>\n<ol>\n<li>Understand the <a href=\"https:\/\/cloud.google.com\/video-intelligence\/docs\/\">official documentation<\/a>.<\/li>\n<li>Take a look at <a href=\"https:\/\/github.com\/GoogleCloudPlatform\/php-docs-samples\/tree\/master\/video\/\">in-depth usage samples<\/a>.<\/li>\n<\/ol><\/body>","methods":[]}