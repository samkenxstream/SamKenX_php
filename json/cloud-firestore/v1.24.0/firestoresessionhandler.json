{"id":"firestore\/firestoresessionhandler","type":"","title":"Google\\Cloud\\Firestore\\FirestoreSessionHandler","name":"FirestoreSessionHandler","description":"<p>Custom session handler backed by Cloud Firestore.<\/p>\n<p>Instead of storing the session data in a local file, this handler stores the\ndata in Firestore. The biggest benefit of doing this is the data can be\nshared by multiple instances, making it suitable for cloud applications.<\/p>\n<p>The downside of using Firestore is that write operations will cost you some\nmoney, so it is highly recommended to minimize the write operations while\nusing this handler. In order to do so, keep the data in the session as\nlimited as possible; for example, it is ok to put only signed-in state and\nthe user id in the session with this handler. However, for example, it is\ndefinitely not recommended that you store your application's whole undo\nhistory in the session, because every user operation will cause a Firestore\nwrite, potentially costing you a lot of money.<\/p>\n<p>This handler doesn't provide pessimistic lock for session data. Instead, it\nuses a Firestore transaction for data consistency. This means that if\nmultiple requests are modifying the same session data simultaneously, there\nwill be more probablity that some of the <code>write<\/code> operations will fail.<\/p>\n<p>If you are building an AJAX application which may issue multiple requests\nto the server, please design your session data carefully in order to avoid\npossible data contentions. Also please see the 2nd example below for how to\nproperly handle errors on <code>write<\/code> operations.<\/p>\n<p>The handler stores data in a collection formatted from the values of\nsession.save_path and session.name, which can be customized using the\n$collectionNameTemplate option. This isolates the session data from your\napplication data. It creates documents in the specified collection where the\nID is the session ID. By default, it does nothing on gc for reducing the\ncost. Pass a positive value up to 500 for $gcLimit option to delete entities\nin gc.<\/p>\n<p>The first example automatically writes the session data. It's handy, but\nthe code doesn't stop even if it fails to write the session data, because\nthe <code>write<\/code> happens when the code exits. If you want to know whether the\nsession data is correctly written to Firestore, you need to call\n<code>session_write_close()<\/code> explicitly and then handle <code>E_USER_WARNING<\/code>\nproperly. See the second example for a demonstration.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Firestore\\FirestoreClient;\n\n$firestore = new FirestoreClient();\n\n$handler = $firestore->sessionHandler();\n\nsession_set_save_handler($handler, true);\nsession_save_path('sessions');\nsession_start();\n\n\/\/ Then write and read the $_SESSION array.\n$_SESSION['name'] = 'Bob';\necho $_SESSION['name'];"},{"caption":"<p>Session handler with error handling:<\/p>","code":"use Google\\Cloud\\Firestore\\FirestoreClient;\n\n$firestore = new FirestoreClient();\n\n$handler = $firestore->sessionHandler();\nsession_set_save_handler($handler, true);\nsession_save_path('sessions');\nsession_start();\n\n\/\/ Then read and write the $_SESSION array.\n$_SESSION['name'] = 'Bob';\n\nfunction handle_session_error($errNo, $errStr, $errFile, $errLine) {\n    \/\/ We throw an exception here, but you can do whatever you need.\n    throw new RuntimeException(\n        \"$errStr in $errFile on line $errLine\",\n        $errNo\n    );\n}\nset_error_handler('handle_session_error', E_USER_WARNING);\n\n\/\/ If `write` fails for any reason, an exception will be thrown.\nsession_write_close();\nrestore_error_handler();\n\n\/\/ You can still read the $_SESSION array after closing the session.\necho $_SESSION['name'];"}],"resources":[{"title":"SessionHandlerInterface","link":"http:\/\/php.net\/manual\/en\/class.sessionhandlerinterface.php"}],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Firestore\/src\/FirestoreSessionHandler.php#L180","description":"<p>Create a custom session handler backed by Cloud Firestore.<\/p>","examples":[],"resources":[],"params":[{"name":"connection","description":"<p>A Connection to Cloud Firestore.<\/p>","types":["<a data-custom-type=\"cloud-firestore\/v1.24.0\/firestore\/connection\/connectioninterface\">Google\\Cloud\\Firestore\\Connection\\ConnectionInterface<\/a>"],"optional":false,"nullable":null},{"name":"valueMapper","description":"<p>A Firestore Value Mapper.<\/p>","types":["<a data-custom-type=\"cloud-firestore\/v1.24.0\/firestore\/valuemapper\">Google\\Cloud\\Firestore\\ValueMapper<\/a>"],"optional":false,"nullable":null},{"name":"projectId","description":"<p>The current project id.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"database","description":"<p>The database id.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.gcLimit","description":"<p>The number of entities to delete in the garbage collection. Values larger than 500 will be limited to 500. <strong>Defaults to<\/strong> <code>0<\/code>, indicating garbage collection is disabled by default.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.collectionNameTemplate","description":"<p>A sprintf compatible template for formatting the collection name where sessions will be stored. The template receives two values, the first being the save path and the latter being the session name.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.begin","description":"<p>Configuration options for beginTransaction.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.commit","description":"<p>Configuration options for commit.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.rollback","description":"<p>Configuration options for rollback.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.read","description":"<p>Configuration options for read.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.query","description":"<p>Configuration options for runQuery.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"open","type":"instance","name":"open","source":"Firestore\/src\/FirestoreSessionHandler.php#L214","description":"<p>Start a session, by getting the Firebase collection from $savePath.<\/p>","examples":[],"resources":[],"params":[{"name":"savePath","description":"<p>The value of <code>session.save_path<\/code> setting will be\nused in the Firestore collection ID.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"sessionName","description":"<p>The value of <code>session.name<\/code> setting will be\nused in the Firestore collection ID.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"close","type":"instance","name":"close","source":"Firestore\/src\/FirestoreSessionHandler.php#L245","description":"<p>Close the transaction and commit any changes.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"read","type":"instance","name":"read","source":"Firestore\/src\/FirestoreSessionHandler.php#L269","description":"<p>Read the session data from Cloud Firestore.<\/p>","examples":[],"resources":[],"params":[{"name":"id","description":"<p>Identifier used for the session.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"write","type":"instance","name":"write","source":"Firestore\/src\/FirestoreSessionHandler.php#L304","description":"<p>Write the session data to Cloud Firestore.<\/p>","examples":[],"resources":[],"params":[{"name":"id","description":"<p>Identifier used for the session.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The session data to write to the Firestore document.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"destroy","type":"instance","name":"destroy","source":"Firestore\/src\/FirestoreSessionHandler.php#L327","description":"<p>Delete the session data from Cloud Firestore.<\/p>","examples":[],"resources":[],"params":[{"name":"id","description":"<p>Identifier used for the session<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"gc","type":"instance","name":"gc","source":"Firestore\/src\/FirestoreSessionHandler.php#L348","description":"<p>Delete the old session data from Cloud Firestore.<\/p>","examples":[],"resources":[],"params":[{"name":"maxlifetime","description":"<p>Remove all session data older than this number\nin seconds.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]}]}