{"id":"firestore\/transaction","type":"","title":"Google\\Cloud\\Firestore\\Transaction","name":"Transaction","description":"<p>Represents a Firestore transaction.<\/p>\n<p>This class should be accessed inside a transaction callable, obtained via\n<a data-custom-type=\"firestore\/firestoreclient\" data-method=\"runTransaction\">Google\\Cloud\\Firestore\\FirestoreClient::runTransaction()<\/a>.<\/p>\n<p>Note that method examples, while shown as being called directly for the sake\nof brevity, should be called only within the context of a transaction\ncallable, as noted above.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Firestore\\FirestoreClient;\nuse Google\\Cloud\\Firestore\\Transaction;\n\n$firestore = new FirestoreClient();\n$document = $firestore->document('users\/john');\n$firestore->runTransaction(function (Transaction $transaction) use ($document) {\n    \/\/ Manage Transaction.\n});"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Firestore\/src\/Transaction.php#L81","description":"","examples":[],"resources":[],"params":[{"name":"connection","description":"<p>A connection to Cloud Firestore.<\/p>","types":["<a data-custom-type=\"firestore\/connection\/connectioninterface\">Google\\Cloud\\Firestore\\Connection\\ConnectionInterface<\/a>"],"optional":false,"nullable":null},{"name":"valueMapper","description":"<p>A Firestore Value Mapper.<\/p>","types":["<a data-custom-type=\"firestore\/valuemapper\">Google\\Cloud\\Firestore\\ValueMapper<\/a>"],"optional":false,"nullable":null},{"name":"database","description":"<p>The database name.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"transaction","description":"<p>The transaction ID.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"snapshot","type":"instance","name":"snapshot","source":"Firestore\/src\/Transaction.php#L107","description":"<p>Get a Document Snapshot.<\/p>","examples":[{"caption":"","code":"$snapshot = $transaction->snapshot($document);"}],"resources":[],"params":[{"name":"document","description":"<p>The document to retrieve.<\/p>","types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>"],"description":""}]},{"id":"documents","type":"instance","name":"documents","source":"Firestore\/src\/Transaction.php#L154","description":"<p>Get a list of documents by their path.<\/p>\n<p>The number of results generated will be equal to the number of documents\nrequested, except in case of error.<\/p>\n<p>Note that this method will <strong>always<\/strong> return instances of\n<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>, even if the documents\nrequested do not exist. It is highly recommended that you check for\nexistence before accessing document data.<\/p>","examples":[{"caption":"","code":"$documents = $transaction->documents([\n    'users\/john',\n    'users\/dave'\n]);"},{"caption":"<p>To check whether a given document exists, use <code>DocumentSnapshot::exists()<\/code>.<\/p>","code":"$documents = $transaction->documents([\n    'users\/deleted-user'\n]);\n\nforeach ($documents as $document) {\n    if (!$document->exists()) {\n        echo $document->id() . ' Does Not Exist';\n    }\n}"}],"resources":[{"title":"BatchGetDocuments","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.BatchGetDocuments"}],"params":[{"name":"paths","description":"<p>Any combination of string paths or DocumentReference instances.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>","<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot[]<\/a>"],"description":""}]},{"id":"runQuery","type":"instance","name":"runQuery","source":"Firestore\/src\/Transaction.php#L180","description":"<p>Run a Query inside the Transaction.<\/p>","examples":[{"caption":"","code":"$results = $transaction->runQuery($query);"}],"resources":[],"params":[{"name":"query","description":"<p>A Firestore Query.<\/p>","types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/querysnapshot\">Google\\Cloud\\Firestore\\QuerySnapshot<\/a>"],"description":""}]},{"id":"create","type":"instance","name":"create","source":"Firestore\/src\/Transaction.php#L206","description":"<p>Enqueue an operation to create a Firestore document.<\/p>","examples":[{"caption":"","code":"$transaction->create($document, [\n    'name' => 'John',\n    'country' => 'USA'\n]);"}],"resources":[],"params":[{"name":"document","description":"<p>The document to create.<\/p>","types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"optional":false,"nullable":null},{"name":"fields","description":"<p>An array containing fields, where keys are the field\nnames, and values are field values. Nested arrays are allowed.\nNote that unlike\n<a data-custom-type=\"firestore\/documentreference\" data-method=\"update\">Google\\Cloud\\Firestore\\DocumentReference::update()<\/a>, field\npaths are NOT supported by this method.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/transaction\">Google\\Cloud\\Firestore\\Transaction<\/a>"],"description":""}]},{"id":"set","type":"instance","name":"set","source":"Firestore\/src\/Transaction.php#L247","description":"<p>Enqueue an operation to modify or replace a Firestore document.<\/p>","examples":[{"caption":"<p>In this example, all field not explicitly specified will be removed.<\/p>","code":"$transaction->set($document, [\n    'name' => 'Johnny'\n]);"},{"caption":"<p>To specify MERGE over REPLACE, set <code>$options.merge<\/code> to <code>true<\/code>.<\/p>","code":"$transaction->set($document, [\n    'name' => 'Johnny'\n], [\n    'merge' => true\n]);"}],"resources":[],"params":[{"name":"document","description":"<p>The document to modify or replace.<\/p>","types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"optional":false,"nullable":null},{"name":"fields","description":"<p>An array containing fields, where keys are the field\nnames, and values are field values. Nested arrays are allowed.\nNote that unlike <a data-custom-type=\"firestore\/transaction\" data-method=\"update\">Google\\Cloud\\Firestore\\Transaction::update()<\/a>,\nfield paths are NOT supported by this method.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.merge","description":"<p>If true, unwritten fields will be preserved. Otherwise, they will be overwritten (removed). <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/transaction\">Google\\Cloud\\Firestore\\Transaction<\/a>"],"description":""}]},{"id":"update","type":"instance","name":"update","source":"Firestore\/src\/Transaction.php#L317","description":"<p>Enqueue an update with field paths and values.<\/p>\n<p>Merges provided data with data stored in Firestore.<\/p>\n<p>Calling this method on a non-existent document will raise an exception.<\/p>\n<p>This method supports various sentinel values, to perform special operations\non fields. Available sentinel values are provided as methods, found in\n<a data-custom-type=\"firestore\/fieldvalue\">Google\\Cloud\\Firestore\\FieldValue<\/a>.<\/p>\n<p>Note that field names must be provided using field paths, encoded either\nas a dot-delimited string (i.e. <code>foo.bar<\/code>), or an instance of\n<a data-custom-type=\"firestore\/fieldpath\">Google\\Cloud\\Firestore\\FieldPath<\/a>. Nested arrays are not allowed.<\/p>\n<p>Please note that conflicting paths will result in an exception. Paths\nconflict when one path indicates a location nested within another path.\nFor instance, path <code>a.b<\/code> cannot be set directly if path <code>a<\/code> is also\nprovided.<\/p>","examples":[{"caption":"","code":"$transaction->update($document, [\n    ['path' => 'name', 'value' => 'John'],\n    ['path' => 'country', 'value' => 'USA'],\n    ['path' => 'cryptoCurrencies.bitcoin', 'value' => 0.5],\n    ['path' => 'cryptoCurrencies.ethereum', 'value' => 10],\n    ['path' => 'cryptoCurrencies.litecoin', 'value' => 5.51]\n]);"},{"caption":"<p>Google Cloud PHP provides special field values to enable operations such as deleting fields or setting the value to the current server timestamp.<\/p>","code":"use Google\\Cloud\\Firestore\\FieldValue;\n\n$transaction->update($document, [\n    ['path' => 'country', 'value' => FieldValue::deleteField()],\n    ['path' => 'lastLogin', 'value' => FieldValue::serverTimestamp()]\n]);"},{"caption":"<p>If your field names contain special characters (such as <code>.<\/code>, or symbols), using <a data-custom-type=\"firestore\/fieldpath\">Google\\Cloud\\Firestore\\FieldPath<\/a> will properly escape each element.<\/p>","code":"use Google\\Cloud\\Firestore\\FieldPath;\n\n$transaction->update($document, [\n    ['path' => new FieldPath(['cryptoCurrencies', 'big$$$coin']), 'value' => 5.51]\n]);"}],"resources":[],"params":[{"name":"document","description":"<p>The document to modify or replace.<\/p>","types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>A list of arrays of form\n<code>[FieldPath|string $path, mixed $value]<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"If data is given in an invalid format\nor is empty."},{"type":"\\InvalidArgumentException","description":"If any field paths are empty."},{"type":"\\InvalidArgumentException","description":"If field paths conflict."}],"returns":[{"types":["<a data-custom-type=\"firestore\/transaction\">Google\\Cloud\\Firestore\\Transaction<\/a>"],"description":""}]},{"id":"delete","type":"instance","name":"delete","source":"Firestore\/src\/Transaction.php#L336","description":"<p>Enqueue an operation to delete a Firestore document.<\/p>","examples":[{"caption":"","code":"$transaction->delete($document);"}],"resources":[],"params":[{"name":"document","description":"<p>The document to delete.<\/p>","types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/transaction\">Google\\Cloud\\Firestore\\Transaction<\/a>"],"description":""}]}]}