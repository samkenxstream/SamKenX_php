{"id":"firestore\/collectionreference","type":"","title":"Google\\Cloud\\Firestore\\CollectionReference","name":"CollectionReference","description":"<p>Represents a Cloud Firestore Collection.<\/p>\n<p>Collections are implicit namespaces for Firestore Documents. They are created\nwhen the first document is inserted, and cease to exist when the last\ndocument is removed.<\/p>\n<p>Extends <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a><\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Firestore\\FirestoreClient;\n\n$firestore = new FirestoreClient();\n$collection = $firestore->collection('users');"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Firestore\/src\/CollectionReference.php#L72","description":"","examples":[],"resources":[],"params":[{"name":"connection","description":"<p>A Connection to Cloud Firestore.<\/p>","types":["<a data-custom-type=\"firestore\/connection\/connectioninterface\">Google\\Cloud\\Firestore\\Connection\\ConnectionInterface<\/a>"],"optional":false,"nullable":null},{"name":"valueMapper","description":"<p>A Firestore Value Mapper.<\/p>","types":["<a data-custom-type=\"firestore\/valuemapper\">Google\\Cloud\\Firestore\\ValueMapper<\/a>"],"optional":false,"nullable":null},{"name":"name","description":"<p>The absolute name of the collection.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"name","type":"instance","name":"name","source":"Firestore\/src\/CollectionReference.php#L112","description":"<p>Get the collection name.<\/p>\n<p>Names are absolute. The result of this call would be of the form\n<code>projects\/&lt;project-id&gt;\/databases\/&lt;database-id&gt;\/documents\/&lt;relative-path&gt;<\/code>.<\/p>\n<p>Other methods are available to retrieve different parts of a collection name:<\/p>\n<ul>\n<li><a data-custom-type=\"firestore\/collectionreference\" data-method=\"id\">Google\\Cloud\\Firestore\\CollectionReference::id()<\/a> Returns the last element.<\/li>\n<li><a data-custom-type=\"firestore\/collectionreference\" data-method=\"path\">Google\\Cloud\\Firestore\\CollectionReference::path()<\/a> Returns the path, relative to the database.<\/li>\n<\/ul>","examples":[{"caption":"","code":"$name = $collection->name();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"path","type":"instance","name":"path","source":"Firestore\/src\/CollectionReference.php#L132","description":"<p>Get the collection path.<\/p>\n<p>Paths identify the location of a collection, relative to the database name.<\/p>\n<p>To retrieve the collection ID (the last element of the path), use\n<a data-custom-type=\"firestore\/collectionreference\" data-method=\"id\">Google\\Cloud\\Firestore\\CollectionReference::id()<\/a>.<\/p>","examples":[{"caption":"","code":"$path = $collection->path();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"id","type":"instance","name":"id","source":"Firestore\/src\/CollectionReference.php#L151","description":"<p>Get the collection ID.<\/p>\n<p>IDs are the path element which identifies a resource. To retrieve the\nfull path to a resource (the resource name), use\n<a data-custom-type=\"firestore\/collectionreference\" data-method=\"name\">Google\\Cloud\\Firestore\\CollectionReference::name()<\/a>.<\/p>","examples":[{"caption":"","code":"$id = $collection->id();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"document","type":"instance","name":"document","source":"Firestore\/src\/CollectionReference.php#L167","description":"<p>Get a reference to a document which is a direct child of this collection.<\/p>","examples":[{"caption":"","code":"$newUser = $collection->document('john');"}],"resources":[],"params":[{"name":"documentId","description":"<p>The document ID.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"description":""}]},{"id":"newDocument","type":"instance","name":"newDocument","source":"Firestore\/src\/CollectionReference.php#L188","description":"<p>Get a document reference with a randomly generated document ID.<\/p>\n<p>If you wish to create a document reference with a specified name, use\n<a data-custom-type=\"firestore\/collectionreference\" data-method=\"document\">Google\\Cloud\\Firestore\\CollectionReference::document()<\/a>.<\/p>\n<p>This method does NOT insert the document until you call\n<a data-custom-type=\"firestore\/documentreference\" data-method=\"create\">Google\\Cloud\\Firestore\\DocumentReference::create()<\/a>.<\/p>","examples":[{"caption":"","code":"$newUser = $collection->newDocument();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"description":""}]},{"id":"add","type":"instance","name":"add","source":"Firestore\/src\/CollectionReference.php#L219","description":"<p>Generate a new document reference, and insert it with the given field data.<\/p>\n<p>This method will generate a random document name. If you wish to create a\ndocument with a specified name, create a reference with\n<a data-custom-type=\"firestore\/collectionreference\" data-method=\"document\">Google\\Cloud\\Firestore\\CollectionReference::document()<\/a>, then call\n<a data-custom-type=\"firestore\/documentreference\" data-method=\"create\">Google\\Cloud\\Firestore\\DocumentReference::create()<\/a> to insert the\ndocument.<\/p>\n<p>This method immediately inserts the document. If you wish for lazy\ncreation of a Document instance, refer to\n<a data-custom-type=\"firestore\/collectionreference\" data-method=\"document\">Google\\Cloud\\Firestore\\CollectionReference::document()<\/a> or\n<a data-custom-type=\"firestore\/collectionreference\" data-method=\"newDocument\">Google\\Cloud\\Firestore\\CollectionReference::newDocument()<\/a>.<\/p>","examples":[{"caption":"","code":"$newUser = $collection->add([\n    'name' => 'Kate'\n]);"}],"resources":[],"params":[{"name":"fields","description":"<p>An array containing field names paired with their value.\nAccepts a nested array, or a simple array of field paths.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"description":""}]},{"id":"listDocuments","type":"instance","name":"listDocuments","source":"Firestore\/src\/CollectionReference.php#L259","description":"<p>List all documents in the collection.<\/p>\n<p>Missing documents will be included in the result. A missing document is\none which does not exist, but has sub-documents.<\/p>","examples":[{"caption":"","code":"$documents = $collection->listDocuments();\nforeach ($documents as $document) {\n    echo $document->name() . PHP_EOL;\n}"}],"resources":[{"title":"ListDocumentsRequest","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.ListDocumentsRequest"}],"params":[{"name":"options","description":"<p>Configuration options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.pageSize","description":"<p>The maximum number of results to return per request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.resultLimit","description":"<p>Limit the number of results returned in total. <strong>Defaults to<\/strong> <code>0<\/code> (return all results).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.pageToken","description":"<p>A previously-returned page token used to resume the loading of results from a specific point.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"core\/iterator\/itemiterator\">Google\\Cloud\\Core\\Iterator\\ItemIterator<\/a>&lt;<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>&gt;"],"description":""}]},{"id":"parent","type":"instance","name":"parent","source":"Firestore\/src\/CollectionReference.php#L294","description":"<p>Get the parent document reference for a subcollection, or null if root.<\/p>","examples":[{"caption":"","code":"$parent = $collection->parent();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"documents","type":"instance","name":"documents","source":"Firestore\/src\/Query.php#L190","description":"<p>Get all documents matching the provided query filters.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$result = $query->documents();"}],"resources":[{"title":"RunQuery","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.RunQuery"}],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.maxRetries","description":"<p>The maximum number of times to retry a query. <strong>Defaults to<\/strong> <code>5<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\RuntimeException","description":"If limit-to-last is enabled but no order-by has\nbeen specified."}],"returns":[{"types":["<a data-custom-type=\"firestore\/querysnapshot\">Google\\Cloud\\Firestore\\QuerySnapshot<\/a>&lt;<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>&gt;"],"description":""}]},{"id":"select","type":"instance","name":"select","source":"Firestore\/src\/Query.php#L269","description":"<p>Add a SELECT to the Query.<\/p>\n<p>Creates and returns a new Query instance that applies a field mask to the\nresult and returns only the specified subset of fields. You can specify a\nlist of field paths to return, or use an empty list to only return the\nreferences of matching documents.<\/p>\n<p>Subsequent calls to this method will override previous values.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->select(['firstName']);"}],"resources":[],"params":[{"name":"fieldPaths","description":"<p>The projection to return, in the\nform of an array of field paths. To only return the name of the\ndocument, provide an empty array.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>","<a data-custom-type=\"firestore\/fieldpath\">Google\\Cloud\\Firestore\\FieldPath[]<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"where","type":"instance","name":"where","source":"Firestore\/src\/Query.php#L326","description":"<p>Add a WHERE clause to the Query.<\/p>\n<p>For a list of all available operators, see\n<a data-custom-type=\"firestore\/v1\/structuredquery\/fieldfilter\/operator\">Google\\Cloud\\Firestore\\V1\\StructuredQuery\\FieldFilter\\Operator<\/a>.\nThis method also supports a number of comparison operators which you will\nbe familiar with, such as <code>=<\/code>, <code>&gt;<\/code>, <code>&lt;<\/code>, <code>&lt;=<\/code> and <code>&gt;=<\/code>. For array fields,\nthe <code>array-contains<\/code>, <code>IN<\/code> and <code>array-contains-any<\/code> operators are also\navailable.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->where('firstName', '=', 'John');"},{"caption":"<p>Filtering against <code>null<\/code> and <code>NAN<\/code> is supported only with the equality operator.<\/p>","code":"$query = $query->where('coolnessPercentage', '=', NAN);"},{"caption":"<p>Use <code>array-contains<\/code> to select documents where the array contains given elements.<\/p>","code":"$query = $query->where('friends', 'array-contains', ['Steve', 'Sarah']);"}],"resources":[],"params":[{"name":"fieldPath","description":"<p>The field to filter by.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a data-custom-type=\"firestore\/fieldpath\">Google\\Cloud\\Firestore\\FieldPath<\/a>"],"optional":false,"nullable":null},{"name":"operator","description":"<p>The operator to filter by.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null},{"name":"value","description":"<p>The value to compare to.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.mixed\" target=\"_blank\">mixed<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"If an invalid operator or value is encountered."}],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"orderBy","type":"instance","name":"orderBy","source":"Firestore\/src\/Query.php#L431","description":"<p>Add an ORDER BY clause to the Query.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->orderBy('firstName', 'DESC');"}],"resources":[],"params":[{"name":"fieldPath","description":"<p>The field to order by.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a data-custom-type=\"firestore\/fieldpath\">Google\\Cloud\\Firestore\\FieldPath<\/a>"],"optional":false,"nullable":null},{"name":"direction","description":"<p>The direction to order in. <strong>Defaults to<\/strong>\n<code>ASC<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"If an invalid direction is given."},{"type":"\\InvalidArgumentException","description":"If orderBy is called after `startAt()`,\n`startAfter()`, `endBefore()` or `endAt`()."}],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"limit","type":"instance","name":"limit","source":"Firestore\/src\/Query.php#L480","description":"<p>Limits a query to return only the first matching documents.<\/p>\n<p>Applies after all other constraints. Must be &gt;= 0 if specified.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->limit(10);"}],"resources":[],"params":[{"name":"number","description":"<p>The number of results to return.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"limitToLast","type":"instance","name":"limitToLast","source":"Firestore\/src\/Query.php#L504","description":"<p>Limits a query to return only the last matching documents.<\/p>\n<p>Applies after all other constraints. Must be &gt;= 0 if specified.<\/p>\n<p>You must specify at least one orderBy clause for limitToLast queries,\notherwise an exception will be thrown during execution.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->limitToLast(10)\n    ->orderBy('firstName');"}],"resources":[],"params":[{"name":"number","description":"<p>The number of results to return.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"offset","type":"instance","name":"offset","source":"Firestore\/src\/Query.php#L524","description":"<p>The number of results to skip.<\/p>\n<p>Applies before limit, but after all other constraints. Must be &gt;= 0 if specified.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->offset(10);"}],"resources":[],"params":[{"name":"number","description":"<p>The number of results to skip.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"startAt","type":"instance","name":"startAt","source":"Firestore\/src\/Query.php#L554","description":"<p>A starting point for the query results.<\/p>\n<p>Starts results at the provided set of field values relative to the order\nof the query. The order of the provided values must match the order of\nthe order by clauses of the query. Values in the given cursor will be\nincluded in the result set, if found.<\/p>\n<p>Multiple invocations of this call overwrite previous calls. Calling\n<code>startAt()<\/code> will overwrite both previous <code>startAt()<\/code> and <code>startAfter()<\/code>\ncalls.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->orderBy('age', 'ASC')->startAt([18]);\n$users18YearsOrOlder = $query->documents();"}],"resources":[],"params":[{"name":"fieldValues","description":"<p>A list of values, or an\ninstance of <a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>\ndefining the query starting point.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"startAfter","type":"instance","name":"startAfter","source":"Firestore\/src\/Query.php#L582","description":"<p>A starting point for the query results.<\/p>\n<p>Starts results after the provided set of field values relative to the order\nof the query. The order of the provided values must match the order of\nthe order by clauses of the query. Values in the given cursor will not be\nincluded in the result set.<\/p>\n<p>Multiple invocations of this call overwrite previous calls. Calling\n<code>startAt()<\/code> will overwrite both previous <code>startAt()<\/code> and <code>startAfter()<\/code>\ncalls.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->orderBy('age', 'ASC')->startAfter([17]);\n$users18YearsOrOlder = $query->documents();"}],"resources":[],"params":[{"name":"fieldValues","description":"<p>A list of values, or an\ninstance of <a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>\ndefining the query starting point.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"endBefore","type":"instance","name":"endBefore","source":"Firestore\/src\/Query.php#L610","description":"<p>An end point for the query results.<\/p>\n<p>Ends results before the provided set of field values relative to the order\nof the query. The order of the provided values must match the order of\nthe order by clauses of the query. Values in the given cursor will be\nincluded in the result set, if found.<\/p>\n<p>Multiple invocations of this call overwrite previous calls. Calling\n<code>endBefore()<\/code> will overwrite both previous <code>endBefore()<\/code> and <code>endAt()<\/code>\ncalls.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->orderBy('age', 'ASC')->endBefore([18]);\n$usersYoungerThan18 = $query->documents();"}],"resources":[],"params":[{"name":"fieldValues","description":"<p>A list of values, or an\ninstance of <a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>\ndefining the query end point.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]},{"id":"endAt","type":"instance","name":"endAt","source":"Firestore\/src\/Query.php#L638","description":"<p>An end point for the query results.<\/p>\n<p>Ends results at the provided set of field values relative to the order\nof the query. The order of the provided values must match the order of\nthe order by clauses of the query. Values in the given cursor will not be\nincluded in the result set.<\/p>\n<p>Multiple invocations of this call overwrite previous calls. Calling\n<code>endBefore()<\/code> will overwrite both previous <code>endBefore()<\/code> and <code>endAt()<\/code>\ncalls.<\/p>\n\nImplemented in <a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>","examples":[{"caption":"","code":"$query = $query->orderBy('age', 'ASC')->endAt([17]);\n$usersYoungerThan18 = $query->documents();"}],"resources":[],"params":[{"name":"fieldValues","description":"<p>A list of values, or an\ninstance of <a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>\ndefining the query end point.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/query\">Google\\Cloud\\Firestore\\Query<\/a>"],"description":"<p>A new instance of Query with the given changes applied.<\/p>"}]}]}