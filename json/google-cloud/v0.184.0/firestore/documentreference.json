{"id":"firestore\/documentreference","type":"","title":"Google\\Cloud\\Firestore\\DocumentReference","name":"DocumentReference","description":"<p>Represents a reference to a Firestore document.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Firestore\\FirestoreClient;\n\n$firestore = new FirestoreClient();\n$document = $firestore->document('users\/john');"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Firestore\/src\/DocumentReference.php#L67","description":"","examples":[],"resources":[],"params":[{"name":"connection","description":"<p>A Connection to Cloud Firestore.<\/p>","types":["<a data-custom-type=\"firestore\/connection\/connectioninterface\">Google\\Cloud\\Firestore\\Connection\\ConnectionInterface<\/a>"],"optional":false,"nullable":null},{"name":"valueMapper","description":"<p>A Firestore Value Mapper.<\/p>","types":["<a data-custom-type=\"firestore\/valuemapper\">Google\\Cloud\\Firestore\\ValueMapper<\/a>"],"optional":false,"nullable":null},{"name":"parent","description":"<p>The collection in which this document is contained.<\/p>","types":["<a data-custom-type=\"firestore\/collectionreference\">Google\\Cloud\\Firestore\\CollectionReference<\/a>"],"optional":false,"nullable":null},{"name":"name","description":"<p>The fully-qualified document name.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"parent","type":"instance","name":"parent","source":"Firestore\/src\/DocumentReference.php#L89","description":"<p>Returns the parent collection.<\/p>","examples":[{"caption":"","code":"$parent = $document->parent();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/collectionreference\">Google\\Cloud\\Firestore\\CollectionReference<\/a>"],"description":""}]},{"id":"name","type":"instance","name":"name","source":"Firestore\/src\/DocumentReference.php#L111","description":"<p>Get the document name.<\/p>\n<p>Names are absolute. The result of this call would be of the form\n<code>projects\/&lt;project-id&gt;\/databases\/&lt;database-id&gt;\/documents\/&lt;relative-path&gt;<\/code>.<\/p>\n<p>Other methods are available to retrieve different parts of a collection name:<\/p>\n<ul>\n<li><a data-custom-type=\"firestore\/documentreference\" data-method=\"id\">Google\\Cloud\\Firestore\\DocumentReference::id()<\/a> Returns the last element.<\/li>\n<li><a data-custom-type=\"firestore\/documentreference\" data-method=\"path\">Google\\Cloud\\Firestore\\DocumentReference::path()<\/a> Returns the path, relative to the database.<\/li>\n<\/ul>","examples":[{"caption":"","code":"$name = $document->name();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"path","type":"instance","name":"path","source":"Firestore\/src\/DocumentReference.php#L131","description":"<p>Get the document path.<\/p>\n<p>Paths identify the location of a document, relative to the database name.<\/p>\n<p>To retrieve the document ID (the last element of the path), use\n<a data-custom-type=\"firestore\/documentreference\" data-method=\"id\">Google\\Cloud\\Firestore\\DocumentReference::id()<\/a>.<\/p>","examples":[{"caption":"","code":"$path = $document->path();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"id","type":"instance","name":"id","source":"Firestore\/src\/DocumentReference.php#L150","description":"<p>Get the document identifier (i.e. the last path element).<\/p>\n<p>IDs are the path element which identifies a resource. To retrieve the\npath of a resource, relative to the database name, use\n<a data-custom-type=\"firestore\/documentreference\" data-method=\"path\">Google\\Cloud\\Firestore\\DocumentReference::path()<\/a>.<\/p>","examples":[{"caption":"","code":"$id = $document->id();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"create","type":"instance","name":"create","source":"Firestore\/src\/DocumentReference.php#L179","description":"<p>Create a new document in Firestore.<\/p>\n<p>If the document already exists, this method will fail.<\/p>","examples":[{"caption":"","code":"$document->create([\n    'name' => 'John',\n    'country' => 'USA'\n]);"}],"resources":[{"title":"Commit","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.Commit"}],"params":[{"name":"fields","description":"<p>An array containing fields, where keys are the field\nnames, and values are field values. Nested arrays are allowed.\nNote that unlike <a data-custom-type=\"firestore\/documentreference\" data-method=\"update\">Google\\Cloud\\Firestore\\DocumentReference::update()<\/a>,\nfield paths are NOT supported by this method.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.WriteResult\">WriteResult<\/a><\/p>"}]},{"id":"set","type":"instance","name":"set","source":"Firestore\/src\/DocumentReference.php#L222","description":"<p>Write to a Firestore document, with optional merge behavior.<\/p>\n<p>This method will create the document if it does not already exist.<\/p>\n<p>Unless <code>$options.merge<\/code> is set to true, this method will replace all\nexisting document data.<\/p>","examples":[{"caption":"","code":"$document->set([\n    'name' => 'Dave'\n]);"}],"resources":[{"title":"Commit","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.Commit"}],"params":[{"name":"fields","description":"<p>An array containing fields, where keys are the field\nnames, and values are field values. Nested arrays are allowed.\nNote that unlike <a data-custom-type=\"firestore\/documentreference\" data-method=\"update\">Google\\Cloud\\Firestore\\DocumentReference::update()<\/a>,\nfield paths are NOT supported by this method.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.merge","description":"<p>If true, unwritten fields will be preserved. Otherwise, they will be overwritten (removed). <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.WriteResult\">WriteResult<\/a><\/p>"}]},{"id":"update","type":"instance","name":"update","source":"Firestore\/src\/DocumentReference.php#L297","description":"<p>Update a Firestore document using field paths and values.<\/p>\n<p>Merges provided data with data stored in Firestore.<\/p>\n<p>Calling this method on a non-existent document will raise an exception.<\/p>\n<p>This method supports various sentinel values, to perform special operations\non fields. Available sentinel values are provided as methods, found in\n<a data-custom-type=\"firestore\/fieldvalue\">Google\\Cloud\\Firestore\\FieldValue<\/a>.<\/p>\n<p>Note that field names must be provided using field paths, encoded either\nas a dot-delimited string (i.e. <code>foo.bar<\/code>), or an instance of\n<a data-custom-type=\"firestore\/fieldpath\">Google\\Cloud\\Firestore\\FieldPath<\/a>. Nested arrays are not allowed.<\/p>\n<p>Please note that conflicting paths will result in an exception. Paths\nconflict when one path indicates a location nested within another path.\nFor instance, path <code>a.b<\/code> cannot be set directly if path <code>a<\/code> is also\nprovided.<\/p>","examples":[{"caption":"","code":"$document->update([\n    ['path' => 'name', 'value' => 'John'],\n    ['path' => 'country', 'value' => 'USA'],\n    ['path' => 'cryptoCurrencies.bitcoin', 'value' => 0.5],\n    ['path' => 'cryptoCurrencies.ethereum', 'value' => 10],\n    ['path' => 'cryptoCurrencies.litecoin', 'value' => 5.51]\n]);"},{"caption":"<p>Google Cloud PHP provides special field values to enable operations such as deleting fields or setting the value to the current server timestamp.<\/p>","code":"use Google\\Cloud\\Firestore\\FieldValue;\n\n$document->update([\n    ['path' => 'country', 'value' => FieldValue::deleteField()],\n    ['path' => 'lastLogin', 'value' => FieldValue::serverTimestamp()]\n]);"},{"caption":"<p>If your field names contain special characters (such as <code>.<\/code>, or symbols), using <a data-custom-type=\"firestore\/fieldpath\">Google\\Cloud\\Firestore\\FieldPath<\/a> will properly escape each element.<\/p>","code":"use Google\\Cloud\\Firestore\\FieldPath;\n\n$document->update([\n    ['path' => new FieldPath(['cryptoCurrencies', 'big$$$coin']), 'value' => 5.51]\n]);"}],"resources":[{"title":"Commit","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.Commit"}],"params":[{"name":"data","description":"<p>A list of arrays of form\n<code>[FieldPath|string $path, mixed $value]<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"If data is given in an invalid format\nor is empty."},{"type":"\\InvalidArgumentException","description":"If any field paths are empty."},{"type":"\\InvalidArgumentException","description":"If field paths conflict."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.WriteResult\">WriteResult<\/a><\/p>"}]},{"id":"delete","type":"instance","name":"delete","source":"Firestore\/src\/DocumentReference.php#L321","description":"<p>Delete a Firestore document.<\/p>","examples":[{"caption":"","code":"$document->delete();"}],"resources":[{"title":"Commit","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.Commit"}],"params":[{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.WriteResult\">WriteResult<\/a><\/p>"}]},{"id":"snapshot","type":"instance","name":"snapshot","source":"Firestore\/src\/DocumentReference.php#L345","description":"<p>Get a read-only snapshot of the document.<\/p>","examples":[{"caption":"","code":"$snapshot = $document->snapshot();"}],"resources":[{"title":"BatchGetDocuments","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.BatchGetDocuments"}],"params":[{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>"],"description":""}]},{"id":"collection","type":"instance","name":"collection","source":"Firestore\/src\/DocumentReference.php#L361","description":"<p>Get a reference to a collection which is a child of the current document.<\/p>","examples":[{"caption":"","code":"$child = $document->collection('wallet');"}],"resources":[],"params":[{"name":"collectionId","description":"<p>The ID of the child collection.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/collectionreference\">Google\\Cloud\\Firestore\\CollectionReference<\/a>"],"description":""}]},{"id":"collections","type":"instance","name":"collections","source":"Firestore\/src\/DocumentReference.php#L385","description":"<p>List all collections which are children of the current document.<\/p>","examples":[{"caption":"","code":"$collections = $document->collections();"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"core\/iterator\/itemiterator\">Google\\Cloud\\Core\\Iterator\\ItemIterator<\/a>&lt;<a data-custom-type=\"firestore\/collectionreference\">Google\\Cloud\\Firestore\\CollectionReference<\/a>&gt;"],"description":""}]}]}