{"id":"datastore\/key","type":"","title":"Google\\Cloud\\Datastore\\Key","name":"Key","description":"<p>Keys are unique identifiers for entities.<\/p>\n<p>Keys may be considered either &quot;named&quot; or &quot;incomplete&quot;. A named Key is one in\nwhich each element of the Key path specify a Kind and a Name or ID. An\nincomplete Key omits the Name or ID from the final path element.<\/p>\n<p>Named Keys are required for any lookup, update, upsert or delete operations.\nThey may also be used for inserting records, so long as you are certain that\nthe identifier is available in Datastore.<\/p>\n<p>Incomplete Keys may be used for inserting records into Datastore. When an\nincomplete Key is used, Datastore will allocate an ID before inserting.<\/p>\n<p>Incomplete Keys are useful for guaranteeing the availability of an identifier\nwithout requiring an additional operation to check whether a given name or ID\nis available.<\/p>\n<p>Key state can be checked by calling <code>Key::state()<\/code>. The return will be one of\n<code>Key::STATE_NAMED<\/code> or <code>Key::STATE_INCOMPLETE<\/code>.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Datastore\\DatastoreClient;\n\n$datastore = new DatastoreClient();\n\n$key = $datastore->key('Person', 'Bob');"},{"caption":"<p>Keys with complex paths can be constructed with additional method calls.<\/p>","code":"$key = $datastore->key('Person', 'Bob');\n$key->ancestor('Parents', 'Joe');\n$key->ancestor('Grandparents', 'Barb');"},{"caption":"<p>Path elements can also be appended, so long as the current last path element contains a kind and identifier.<\/p>","code":"$key = $datastore->key('Grandparents', 'Barb');\n$key->pathElement('Parents', 'Joe');\n$key->pathElement('Person');\n$key->pathElement('Child', 'Dave'); \/\/ Error here."}],"resources":[{"title":"Key","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Key"}],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Datastore\/src\/Key.php#L116","description":"<p>Create a Key.<\/p>","examples":[],"resources":[],"params":[{"name":"projectId","description":"<p>The project ID.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.namespaceId","description":"<p>Partitions data under a namespace. Useful for <a href=\"https:\/\/cloud.google.com\/datastore\/docs\/concepts\/multitenancy\">Multitenant Projects<\/a>. Applications with no need for multitenancy should not set this value.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.path","description":"<p>The initial Key path.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"pathElement","type":"instance","name":"pathElement","source":"Datastore\/src\/Key.php#L166","description":"<p>Add a path element to the end of the Key path<\/p>\n<p>If the previous pathElement is incomplete (has no name or ID specified),\nan <code>InvalidArgumentException<\/code> will be thrown. Once an incomplete\npathElement is given, the key cannot be extended any further.<\/p>","examples":[{"caption":"","code":"$key->pathElement('Person', 'Jane');"},{"caption":"<p>In cases where the identifier type is ambiguous, you can choose the type to be used.<\/p>","code":"$key->pathElement('Robots', '1337', [\n    'identifierType' => Key::TYPE_NAME\n]);"}],"resources":[{"title":"PathElement","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Key#PathElement"}],"params":[{"name":"kind","description":"<p>The kind.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"identifier","description":"<p>The name or ID of the object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":true,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.identifierType","description":"<p>If omitted, the type will be determined internally. Setting this to either <code>Key::TYPE_ID<\/code> or <code>Key::TYPE_NAME<\/code> will force the pathElement identifier type.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":""}],"returns":[{"types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"description":""}]},{"id":"ancestor","type":"instance","name":"ancestor","source":"Datastore\/src\/Key.php#L215","description":"<p>Add a path element to the beginning of the Key path.<\/p>","examples":[{"caption":"","code":"$key->ancestor('Person', 'Jane');"},{"caption":"<p>In cases where the identifier type is ambiguous, you can choose the type to be used.<\/p>","code":"$key->ancestor('Robots', '1337', [\n    'identifierType' => Key::TYPE_NAME\n]);"}],"resources":[{"title":"PathElement","link":"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/Key#PathElement"}],"params":[{"name":"kind","description":"<p>The kind.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"identifier","description":"<p>The name or ID of the object.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.identifierType","description":"<p>If omitted, the type will be determined internally. Setting this to either <code>Key::TYPE_ID<\/code> or <code>Key::TYPE_NAME<\/code> will force the pathElement identifier type.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"description":""}]},{"id":"ancestorKey","type":"instance","name":"ancestorKey","source":"Datastore\/src\/Key.php#L243","description":"<p>Use another Key's path as the current Key's ancestor<\/p>\n<p>Given key path will be prepended to any path elements on the current key.<\/p>","examples":[{"caption":"","code":"$parent = $datastore->key('Person', 'Dad');\n$key->ancestorKey($parent);"}],"resources":[],"params":[{"name":"key","description":"<p>The ancestor Key.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":""}],"returns":[{"types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"description":""}]},{"id":"state","type":"instance","name":"state","source":"Datastore\/src\/Key.php#L284","description":"<p>Check if the Key is considered Named or Incomplete.<\/p>\n<p>Use <code>Key::STATE_NAMED<\/code> and <code>Key::STATE_INCOMPLETE<\/code> to check value.<\/p>","examples":[{"caption":"<p>An incomplete key does not have an ID on its last path element.<\/p>","code":"$key = $datastore->key('parent', 1234)\n    ->pathElement('child');\n\nif ($key->state() === Key::STATE_INCOMPLETE) {\n    echo 'Key is incomplete!';\n}"},{"caption":"<p>A named key has a kind and an identifier on each path element.<\/p>","code":"$key = $datastore->key('parent', 1234)\n    ->pathElement('child', 4321);\n\nif ($key->state() === Key::STATE_NAMED) {\n    echo 'Key is named!';\n}"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"path","type":"instance","name":"path","source":"Datastore\/src\/Key.php#L330","description":"<p>Get the key path<\/p>","examples":[{"caption":"","code":"$path = $key->path();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":""}]},{"id":"pathEnd","type":"instance","name":"pathEnd","source":"Datastore\/src\/Key.php#L345","description":"<p>Get the last pathElement in the key<\/p>","examples":[{"caption":"","code":"$lastPathElement = $key->pathEnd();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":""}]},{"id":"pathEndIdentifier","type":"instance","name":"pathEndIdentifier","source":"Datastore\/src\/Key.php#L365","description":"<p>Get the last pathElement identifier.<\/p>\n<p>If the key is incomplete, returns <code>null<\/code>.<\/p>","examples":[{"caption":"","code":"$lastPathElementIndentifier = $key->pathEndIdentifier();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"pathEndIdentifierType","type":"instance","name":"pathEndIdentifierType","source":"Datastore\/src\/Key.php#L392","description":"<p>Get the last pathElement identifier type.<\/p>\n<p>If the key is incomplete, returns <code>null<\/code>.<\/p>","examples":[{"caption":"","code":"$lastPathElementIdentifierType = $key->pathEndIdentifierType();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]}]}