{"id":"datastore\/transaction","type":"","title":"Google\\Cloud\\Datastore\\Transaction","name":"Transaction","description":"<p>Represents a Transaction<\/p>\n<p>A transaction is a set of Datastore operations on one or more entities. Each\ntransaction is guaranteed to be atomic, which means that transactions are\nnever partially applied. Either all of the operations in the transaction are\napplied, or none of them are applied.<\/p>\n<p>It is highly recommended that users read and understand the underlying\nconcepts in <a href=\"https:\/\/cloud.google.com\/datastore\/docs\/concepts\/transactions\">Transactions<\/a>\nbefore beginning.<\/p>\n<p>Mutations (i.e. insert, update and delete) are not executed immediately.\nCalls to those methods (and their batch equivalents) will enqueue a new\nmutation. Calling <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> will\nexecute all the mutations in the order they were enqueued, and end the\ntransaction.<\/p>\n<p>Lookups and queries can be run in a transaction, so long as they are run\nprior to committing or rolling back the transaction.<\/p>\n<p>Transactions are an <strong>optional<\/strong> feature of Google Cloud Datastore. Queries,\nlookups and mutations can be executed outside of a Transaction from\n<a data-custom-type=\"datastore\/datastoreclient\">Google\\Cloud\\Datastore\\DatastoreClient<\/a>.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Datastore\\DatastoreClient;\n\n$datastore = new DatastoreClient();\n\n$transaction = $datastore->transaction();"}],"resources":[{"title":"Transactions","link":"https:\/\/cloud.google.com\/datastore\/docs\/concepts\/transactions"}],"methods":[{"id":"insert","type":"instance","name":"insert","source":"Datastore\/src\/Transaction.php#L87","description":"<p>Insert an entity.<\/p>\n<p>Changes are not immediately committed to Cloud Datastore when calling\nthis method. Use <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> to\ncommit changes and end the transaction.<\/p>\n<p>If entities with incomplete keys are provided, this method will immediately\ntrigger a service call to allocate IDs to the entities.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n$entity = $datastore->entity($key, ['firstName' => 'Bob']);\n\n$transaction->insert($entity);\n$transaction->commit();"}],"resources":[],"params":[{"name":"entity","description":"<p>The entity to insert.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"insertBatch","type":"instance","name":"insertBatch","source":"Datastore\/src\/Transaction.php#L116","description":"<p>Insert multiple entities.<\/p>\n<p>Changes are not immediately committed to Cloud Datastore when calling\nthis method. Use <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> to\ncommit changes and end the transaction.<\/p>\n<p>If entities with incomplete keys are provided, this method will immediately\ntrigger a service call to allocate IDs to the entities.<\/p>","examples":[{"caption":"","code":"$entities = [\n    $datastore->entity('Person', ['firstName' => 'Bob']),\n    $datastore->entity('Person', ['firstName' => 'John'])\n];\n\n$transaction->insertBatch($entities);\n$transaction->commit();"}],"resources":[],"params":[{"name":"entities","description":"<p>The entities to insert.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface[]<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"update","type":"instance","name":"update","source":"Datastore\/src\/Transaction.php#L156","description":"<p>Update an entity.<\/p>\n<p>Changes are not immediately committed to Cloud Datastore when calling\nthis method. Use <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> to\ncommit changes and end the transaction.<\/p>","examples":[{"caption":"","code":"$entity['firstName'] = 'Bob';\n\n$transaction->update($entity);\n$transaction->commit();"}],"resources":[],"params":[{"name":"entity","description":"<p>The entity to update.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.allowOverwrite","description":"<p>Entities must be updated as an entire resource. Patch operations are not supported. Because entities can be created manually, or obtained by a lookup or query, it is possible to accidentally overwrite an existing record with a new one when manually creating an entity. To provide additional safety, this flag must be set to <code>true<\/code> in order to update a record when the entity provided was not obtained through a lookup or query. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"updateBatch","type":"instance","name":"updateBatch","source":"Datastore\/src\/Transaction.php#L196","description":"<p>Update multiple entities.<\/p>\n<p>Changes are not immediately committed to Cloud Datastore when calling\nthis method. Use <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> to\ncommit changes and end the transaction.<\/p>","examples":[{"caption":"","code":"$entities[0]['firstName'] = 'Bob';\n$entities[1]['firstName'] = 'John';\n\n$transaction->updateBatch($entities);\n$transaction->commit();"}],"resources":[],"params":[{"name":"entities","description":"<p>The entities to update.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.allowOverwrite","description":"<p>Entities must be updated as an entire resource. Patch operations are not supported. Because entities can be created manually, or obtained by a lookup or query, it is possible to accidentally overwrite an existing record with a new one when manually creating an entity. To provide additional safety, this flag must be set to <code>true<\/code> in order to update a record when the entity provided was not obtained through a lookup or query. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"upsert","type":"instance","name":"upsert","source":"Datastore\/src\/Transaction.php#L235","description":"<p>Upsert an entity.<\/p>\n<p>Changes are not immediately committed to Cloud Datastore when calling\nthis method. Use <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> to\ncommit changes and end the transaction.<\/p>\n<p>Upsert will create a record if one does not already exist, or overwrite\nexisting record if one already exists.<\/p>\n<p>If entities with incomplete keys are provided, this method will immediately\ntrigger a service call to allocate IDs to the entities.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n$entity = $datastore->entity($key, ['firstName' => 'Bob']);\n\n$transaction->upsert($entity);\n$transaction->commit();"}],"resources":[],"params":[{"name":"entity","description":"<p>The entity to upsert.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"upsertBatch","type":"instance","name":"upsertBatch","source":"Datastore\/src\/Transaction.php#L272","description":"<p>Upsert multiple entities.<\/p>\n<p>Changes are not immediately committed to Cloud Datastore when calling\nthis method. Use <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> to\ncommit changes and end the transaction.<\/p>\n<p>Upsert will create a record if one does not already exist, or overwrite\nexisting record if one already exists.<\/p>\n<p>If entities with incomplete keys are provided, this method will immediately\ntrigger a service call to allocate IDs to the entities.<\/p>","examples":[{"caption":"","code":"$keys = [\n    $datastore->key('Person', 'Bob'),\n    $datastore->key('Person', 'John')\n];\n\n$entities = [\n    $datastore->entity($keys[0], ['firstName' => 'Bob']),\n    $datastore->entity($keys[1], ['firstName' => 'John'])\n];\n\n$transaction->upsertBatch($entities);\n$transaction->commit();"}],"resources":[],"params":[{"name":"entities","description":"<p>The entities to upsert.<\/p>","types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface[]<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"delete","type":"instance","name":"delete","source":"Datastore\/src\/Transaction.php#L300","description":"<p>Delete a record.<\/p>\n<p>Changes are not immediately committed to Cloud Datastore when calling\nthis method. Use <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> to\ncommit changes and end the transaction.<\/p>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n\n$transaction->delete($key);\n$transaction->commit();"}],"resources":[],"params":[{"name":"key","description":"<p>The key to delete<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"deleteBatch","type":"instance","name":"deleteBatch","source":"Datastore\/src\/Transaction.php#L326","description":"<p>Delete multiple records.<\/p>\n<p>Changes are not immediately committed to Cloud Datastore when calling\nthis method. Use <a data-custom-type=\"datastore\/transaction\" data-method=\"commit\">Google\\Cloud\\Datastore\\Transaction::commit()<\/a> to\ncommit changes and end the transaction.<\/p>","examples":[{"caption":"","code":"$keys = [\n    $datastore->key('Person', 'Bob'),\n    $datastore->key('Person', 'John')\n];\n\n$transaction->deleteBatch($keys);\n$transaction->commit();"}],"resources":[],"params":[{"name":"keys","description":"<p>The keys to delete.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key[]<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/transaction\">Google\\Cloud\\Datastore\\Transaction<\/a>"],"description":""}]},{"id":"commit","type":"instance","name":"commit","source":"Datastore\/src\/Transaction.php#L351","description":"<p>Commit all mutations.<\/p>\n<p>Calling this method will end the operation (and close the transaction,\nif one is specified).<\/p>","examples":[{"caption":"","code":"$transaction->commit();"}],"resources":[{"title":"Commit API documentation","link":"https:\/\/cloud.google.com\/datastore\/docs\/reference\/rest\/v1\/projects\/commit"}],"params":[{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p><a href=\"https:\/\/cloud.google.com\/datastore\/reference\/rest\/v1\/projects\/commit#response-body\">Response Body<\/a><\/p>"}]},{"id":"__construct","type":"constructor","name":"__construct","source":"Datastore\/src\/TransactionTrait.php#L49","description":"<p>Create a Transaction<\/p>\n\nImplemented in <a data-custom-type=\"datastore\/transactiontrait\">Google\\Cloud\\Datastore\\TransactionTrait<\/a>","examples":[],"resources":[],"params":[{"name":"operation","description":"<p>Class that handles shared API interaction.<\/p>","types":["<a data-custom-type=\"datastore\/operation\">Google\\Cloud\\Datastore\\Operation<\/a>"],"optional":false,"nullable":null},{"name":"projectId","description":"<p>The Google Cloud Platform project ID.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"transactionId","description":"<p>The transaction to run mutations in.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"lookup","type":"instance","name":"lookup","source":"Datastore\/src\/TransactionTrait.php#L82","description":"<p>Retrieve an entity from the datastore inside a transaction<\/p>\n\nImplemented in <a data-custom-type=\"datastore\/transactiontrait\">Google\\Cloud\\Datastore\\TransactionTrait<\/a>","examples":[{"caption":"","code":"$key = $datastore->key('Person', 'Bob');\n\n$entity = $transaction->lookup($key);\nif (!is_null($entity)) {\n    echo $entity['firstName']; \/\/ 'Bob'\n}"}],"resources":[],"params":[{"name":"key","description":"<p>$key The identifier to use to locate a desired entity.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.className","description":"<p>The name of the class to return results as. Must be a subclass of <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>. If not set, <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a> will be used.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"lookupBatch","type":"instance","name":"lookupBatch","source":"Datastore\/src\/TransactionTrait.php#L126","description":"<p>Get multiple entities inside a transaction<\/p>\n\nImplemented in <a data-custom-type=\"datastore\/transactiontrait\">Google\\Cloud\\Datastore\\TransactionTrait<\/a>","examples":[{"caption":"","code":"$keys = [\n    $datastore->key('Person', 'Bob'),\n    $datastore->key('Person', 'John')\n];\n\n$entities = $transaction->lookupBatch($keys);\n\nforeach ($entities['found'] as $entity) {\n    echo $entity['firstName'] . PHP_EOL;\n}"}],"resources":[],"params":[{"name":"keys","description":"<p>The identifiers to look up.<\/p>","types":["<a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.className","description":"<p>If a string, the name of the class to return results as. Must be a subclass of <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>. If not set, <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a> will be used. If an array is given, it must be an associative array, where the key is a Kind and the value is the name of a subclass of <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.sort","description":"<p>If set to true, results in each set will be sorted to match the order given in $keys. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p>Returns an array with keys [<code>found<\/code>, <code>missing<\/code>, and <code>deferred<\/code>].\nMembers of <code>found<\/code> will be instance of\n<a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>. Members of <code>missing<\/code> and\n<code>deferred<\/code> will be instance of <a data-custom-type=\"datastore\/key\">Google\\Cloud\\Datastore\\Key<\/a>.<\/p>"}]},{"id":"runQuery","type":"instance","name":"runQuery","source":"Datastore\/src\/TransactionTrait.php#L155","description":"<p>Run a query and return entities inside a Transaction<\/p>\n\nImplemented in <a data-custom-type=\"datastore\/transactiontrait\">Google\\Cloud\\Datastore\\TransactionTrait<\/a>","examples":[{"caption":"","code":"$result = $transaction->runQuery($query);\n\nforeach ($result as $entity) {\n    echo $entity['firstName'];\n}"}],"resources":[],"params":[{"name":"query","description":"<p>The query object.<\/p>","types":["<a data-custom-type=\"datastore\/query\/queryinterface\">Google\\Cloud\\Datastore\\Query\\QueryInterface<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.className","description":"<p>The name of the class to return results as. Must be a subclass of <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a>. If not set, <a data-custom-type=\"datastore\/entity\">Google\\Cloud\\Datastore\\Entity<\/a> will be used.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"datastore\/entityiterator\">Google\\Cloud\\Datastore\\EntityIterator<\/a>&lt;<a data-custom-type=\"datastore\/entityinterface\">Google\\Cloud\\Datastore\\EntityInterface<\/a>&gt;"],"description":""}]},{"id":"rollback","type":"instance","name":"rollback","source":"Datastore\/src\/TransactionTrait.php#L172","description":"<p>Roll back a Transaction<\/p>\n\nImplemented in <a data-custom-type=\"datastore\/transactiontrait\">Google\\Cloud\\Datastore\\TransactionTrait<\/a>","examples":[{"caption":"","code":"$transaction->rollback();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]}]}