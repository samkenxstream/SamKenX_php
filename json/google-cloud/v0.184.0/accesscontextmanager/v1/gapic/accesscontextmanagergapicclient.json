{"id":"accesscontextmanager\/v1\/gapic\/accesscontextmanagergapicclient","type":"","title":"Google\\Identity\\AccessContextManager\\V1\\Gapic\\AccessContextManagerGapicClient","name":"AccessContextManagerGapicClient","description":"<p>Service Description: API for setting [Access Levels]\n[google.identity.accesscontextmanager.v1.AccessLevel] and [Service\nPerimeters] [google.identity.accesscontextmanager.v1.ServicePerimeter]\nfor Google Cloud Projects. Each organization has one [AccessPolicy]\n[google.identity.accesscontextmanager.v1.AccessPolicy] containing the\n[Access Levels] [google.identity.accesscontextmanager.v1.AccessLevel]\nand [Service Perimeters]\n[google.identity.accesscontextmanager.v1.ServicePerimeter]. This\n[AccessPolicy] [google.identity.accesscontextmanager.v1.AccessPolicy] is\napplicable to all resources in the organization.<\/p>\n<p>AccessPolicies<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>$accessContextManagerClient = new AccessContextManagerClient();\ntry {\n    $formattedParent = $accessContextManagerClient-&gt;accessPolicyName('[ACCESS_POLICY]');\n    $operationResponse = $accessContextManagerClient-&gt;commitServicePerimeters($formattedParent);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n        $result = $operationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $operationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n    \/\/ Alternatively:\n    \/\/ start the operation, keep the operation name, and resume later\n    $operationResponse = $accessContextManagerClient-&gt;commitServicePerimeters($formattedParent);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $accessContextManagerClient-&gt;resumeOperation($operationName, 'commitServicePerimeters');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n        $result = $newOperationResponse-&gt;getResult();\n    \/\/ doSomethingWith($result)\n    } else {\n        $error = $newOperationResponse-&gt;getError();\n        \/\/ handleError($error)\n    }\n} finally {\n    $accessContextManagerClient-&gt;close();\n}<\/code><\/pre>\n<p>Many parameters require resource names to be formatted in a particular way. To\nassist with these names, this class includes a format method for each type of\nname, and additionally a parseName method to extract the individual identifiers\ncontained within formatted names that are returned by the API.<\/p>","examples":[],"resources":[],"methods":[]}