{"id":"bigtable\/table","type":"","title":"Google\\Cloud\\Bigtable\\Table","name":"Table","description":"<p>A table instance can be used to read rows and to perform insert, update, and\ndelete operations.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Bigtable\\BigtableClient;\n\n$bigtable = new BigtableClient();\n$table = $bigtable->table('my-instance', 'my-table');"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Bigtable\/src\/Table.php#L88","description":"<p>Create a table instance.<\/p>","examples":[],"resources":[],"params":[{"name":"gapicClient","description":"<p>The GAPIC client used to make requests.<\/p>","types":["<a data-custom-type=\"bigtable\/v2\/bigtableclient\">Google\\Cloud\\Bigtable\\V2\\BigtableClient<\/a>"],"optional":false,"nullable":null},{"name":"tableName","description":"<p>The full table name. Must match the following\npattern: projects\/{project}\/instances\/{instance}\/tables\/{table}.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.appProfileId","description":"<p>This value specifies routing for replication. <strong>Defaults to<\/strong> the &quot;default&quot; application profile.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.headers","description":"<p>Headers to be passed with each request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.retries","description":"<p>Number of times to retry. <strong>Defaults to<\/strong> <code>3<\/code>. This settings only applies to <a data-custom-type=\"bigtable\/table\" data-method=\"mutateRows\">Google\\Cloud\\Bigtable\\Table::mutateRows()<\/a>, <a data-custom-type=\"bigtable\/table\" data-method=\"upsert\">Google\\Cloud\\Bigtable\\Table::upsert()<\/a> and <a data-custom-type=\"bigtable\/table\" data-method=\"readRows\">Google\\Cloud\\Bigtable\\Table::readRows()<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"mutateRows","type":"instance","name":"mutateRows","source":"Bigtable\/src\/Table.php#L120","description":"<p>Mutates rows in a table.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Bigtable\\Mutations;\n\n$mutations = (new Mutations)\n    ->upsert('cf1', 'cq1', 'value1', 1534183334215000);\n\n$table->mutateRows(['r1' => $mutations]);"}],"resources":[],"params":[{"name":"rowMutations","description":"<p>An associative array with the key being the\nrow key and the value being the\n<a data-custom-type=\"bigtable\/mutations\">Google\\Cloud\\Bigtable\\Mutations<\/a> to perform.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException|\\Google\\Cloud\\Bigtable\\Exception\\BigtableDataOperationException","description":"If the remote call fails or operation fails."},{"type":"\\Google\\Cloud\\Bigtable\\InvalidArgumentException","description":"If rowMutations is a list instead of associative array indexed by row key."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"mutateRow","type":"instance","name":"mutateRow","source":"Bigtable\/src\/Table.php#L158","description":"<p>Mutates a row atomically. Cells already present in the row are left\nunchanged unless explicitly changed by <code>mutations<\/code>.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Bigtable\\Mutations;\n\n$mutations = (new Mutations)\n    ->upsert('cf1', 'cq1', 'value1', 1534183334215000);\n\n$table->mutateRow('r1', $mutations);"}],"resources":[],"params":[{"name":"rowKey","description":"<p>The row key of the row to mutate.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"mutations","description":"<p>Mutations to apply on row.<\/p>","types":["<a data-custom-type=\"bigtable\/mutations\">Google\\Cloud\\Bigtable\\Mutations<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.retries","description":"<p>Number of times to retry. <strong>Defaults to<\/strong> <code>3<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"If the remote call fails."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"upsert","type":"instance","name":"upsert","source":"Bigtable\/src\/Table.php#L194","description":"<p>Insert\/update rows in a table.<\/p>","examples":[{"caption":"","code":"$table->upsert([\n    'r1' => [\n        'cf1' => [\n            'cq1' => [\n                'value'=>'value1',\n                'timeStamp' => 1534183334215000\n             ]\n        ]\n    ]\n]);"}],"resources":[],"params":[{"name":"rows","description":"<p>An array of rows.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.retries","description":"<p>Number of times to retry. <strong>Defaults to<\/strong> <code>3<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException|\\Google\\Cloud\\Bigtable\\Exception\\BigtableDataOperationException","description":"If the remote call fails or operation fails"}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"readRows","type":"instance","name":"readRows","source":"Bigtable\/src\/Table.php#L263","description":"<p>Read rows from the table.<\/p>","examples":[{"caption":"","code":"$rows = $table->readRows();\n\nforeach ($rows as $key => $row) {\n    echo $key . ': ' . print_r($row, true) . PHP_EOL;\n}"},{"caption":"<p>Specify a set of row ranges.<\/p>","code":"$rows = $table->readRows([\n    'rowRanges' => [\n        [\n            'startKeyOpen' => 'jefferson',\n            'endKeyOpen' => 'lincoln'\n        ]\n    ]\n]);\n\nforeach ($rows as $key => $row) {\n    echo $key . ': ' . print_r($row, true) . PHP_EOL;\n}"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.rowKeys","description":"<p>A set of row keys to read.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>"],"optional":null,"nullable":null},{"name":"options.rowRanges","description":"<p>A set of row ranges. Each row range is an associative array which may contain a start key (<code>startKeyClosed<\/code> or <code>startKeyOpen<\/code>) and\/or an end key (<code>endKeyOpen<\/code> or <code>endKeyClosed<\/code>).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.filter","description":"<p>A filter used to take an input row and produce an alternate view of the row based on the specified rules. To learn more please see <a data-custom-type=\"bigtable\/filter\">Google\\Cloud\\Bigtable\\Filter<\/a> which provides static factory methods for the various filter types.<\/p>","types":["<a data-custom-type=\"bigtable\/filter\/filterinterface\">Google\\Cloud\\Bigtable\\Filter\\FilterInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.rowsLimit","description":"<p>The number of rows to scan.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.retries","description":"<p>Number of times to retry. <strong>Defaults to<\/strong> <code>3<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"bigtable\/chunkformatter\">Google\\Cloud\\Bigtable\\ChunkFormatter<\/a>"],"description":""}]},{"id":"readRow","type":"instance","name":"readRow","source":"Bigtable\/src\/Table.php#L325","description":"<p>Read a single row from the table.<\/p>","examples":[{"caption":"","code":"$row = $table->readRow('jefferson');\n\nprint_r($row);"}],"resources":[],"params":[{"name":"rowKey","description":"<p>The row key to read.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"readModifyWriteRow","type":"instance","name":"readModifyWriteRow","source":"Bigtable\/src\/Table.php#L376","description":"<p>Modifies a row atomically on the server. The method reads the latest\nexisting timestamp and value from the specified columns and writes a new\nentry based on pre-defined read\/modify\/write rules. The new value for the\ntimestamp is the greater of the existing timestamp or the current server\ntime. The method returns the new contents of all modified cells.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Bigtable\\ReadModifyWriteRowRules;\n\n$rules = (new ReadModifyWriteRowRules)\n    ->append('cf1', 'cq1', 'value12');\n$row = $table->readModifyWriteRow('rk1', $rules);\n\nprint_r($row);"},{"caption":"<p>Increments value<\/p>","code":"use Google\\Cloud\\Bigtable\\DataUtil;\nuse Google\\Cloud\\Bigtable\\ReadModifyWriteRowRules;\nuse Google\\Cloud\\Bigtable\\Mutations;\n\n$mutations = (new Mutations)\n    ->upsert('cf1', 'cq1', DataUtil::intToByteString(2));\n\n$table->mutateRows(['rk1' => $mutations]);\n\n$rules = (new ReadModifyWriteRowRules)\n    ->increment('cf1', 'cq1', 3);\n$row = $table->readModifyWriteRow('rk1', $rules);\n\nprint_r($row);"}],"resources":[],"params":[{"name":"rowKey","description":"<p>The row key to read.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"rules","description":"<p>Rules to apply on row.<\/p>","types":["<a data-custom-type=\"bigtable\/readmodifywriterowrules\">Google\\Cloud\\Bigtable\\ReadModifyWriteRowRules<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"If the remote call fails or operation fails"}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p>Returns array containing all column family keyed by family name.<\/p>"}]},{"id":"sampleRowKeys","type":"instance","name":"sampleRowKeys","source":"Bigtable\/src\/Table.php#L405","description":"<p>Returns a sample of row keys in the table. The returned row keys will\ndelimit contiguous sections of the table of approximately equal size,\nwhich can be used to break up the data for distributed tasks like\nmapreduces.<\/p>","examples":[{"caption":"","code":"$rowKeyStream = $table->sampleRowKeys();\nforeach ($rowKeyStream as $rowKey) {\n    print_r($rowKey) . PHP_EOL;\n}"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"If the remote call fails or operation fails"}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/class.generator.php\" target=\"_blank\">Generator<\/a>&lt;<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>&gt;"],"description":"<p>A list of associative arrays, each with the keys <code>rowKey<\/code> and <code>offset<\/code>.<\/p>"}]},{"id":"checkAndMutateRow","type":"instance","name":"checkAndMutateRow","source":"Bigtable\/src\/Table.php#L469","description":"<p>Mutates the specified row atomically based on output of the filter.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Bigtable\\Mutations;\n\n$mutations = (new Mutations)->upsert('family', 'qualifier', 'value');\n$result = $table->checkAndMutateRow('rk1', ['trueMutations' => $mutations]);"},{"caption":"<p>With predicate filter<\/p>","code":"use Google\\Cloud\\Bigtable\\Filter;\nuse Google\\Cloud\\Bigtable\\Mutations;\n\n$mutations = (new Mutations)->upsert('family', 'qualifier', 'value');\n$predicateFilter = Filter::qualifier()->exactMatch('cq');\n$options = ['predicateFilter' => $predicateFilter, 'trueMutations' => $mutations];\n$result = $table->checkAndMutateRow('rk1', $options);"}],"resources":[],"params":[{"name":"rowKey","description":"<p>The row key to mutate row conditionally.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.predicateFilter","description":"<p>The filter to be applied to the specified row. Depending on whether or not any results are yielded, either the trueMutations or falseMutations will be executed. If unset, checks that the row contains any values at all. Only a single condition can be set, however that filter can be <a data-custom-type=\"bigtable\/filter\" data-method=\"chain\">Google\\Cloud\\Bigtable\\Filter::chain()<\/a> or <a data-custom-type=\"bigtable\/filter\" data-method=\"interleave\">Google\\Cloud\\Bigtable\\Filter::interleave()<\/a> which can wrap multiple other filters. WARNING: <a data-custom-type=\"bigtable\/filter\" data-method=\"condition\">Google\\Cloud\\Bigtable\\Filter::condition()<\/a> is not supported.<\/p>","types":["<a data-custom-type=\"bigtable\/filter\/filterinterface\">Google\\Cloud\\Bigtable\\Filter\\FilterInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.trueMutations","description":"<p>Mutations to be atomically applied when the predicate filter's condition yields at least one cell when applied to the row. Please note either <code>trueMutations<\/code> or <code>falseMutations<\/code> must be provided.<\/p>","types":["<a data-custom-type=\"bigtable\/mutations\">Google\\Cloud\\Bigtable\\Mutations<\/a>"],"optional":null,"nullable":null},{"name":"options.falseMutations","description":"<p>Mutations to be atomically applied when the predicate filter's condition does not yield any cells when applied to the row. Please note either <code>trueMutations<\/code> or <code>falseMutations<\/code> must be provided.<\/p>","types":["<a data-custom-type=\"bigtable\/mutations\">Google\\Cloud\\Bigtable\\Mutations<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"If the remote call fails or operation fails"},{"type":"\\InvalidArgumentException","description":"If neither of $trueMutations or $falseMutations is set.\nIf $predicateFilter is not instance of <a data-custom-type=\"bigtable\/filter\/filterinterface\">Google\\Cloud\\Bigtable\\Filter\\FilterInterface<\/a>.\nIf $trueMutations is set and is not instance of <a data-custom-type=\"bigtable\/mutations\">Google\\Cloud\\Bigtable\\Mutations<\/a>.\nIf $falseMutations is set and is not instance of <a data-custom-type=\"bigtable\/mutations\">Google\\Cloud\\Bigtable\\Mutations<\/a>."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":"<p>Returns true if predicate filter yielded any output, false otherwise.<\/p>"}]}]}