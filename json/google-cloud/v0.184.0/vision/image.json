{"id":"vision\/image","type":"","title":"Google\\Cloud\\Vision\\Image","name":"Image","description":"<p>Represents an image to be annotated using\n<a href=\"https:\/\/cloud.google.com\/vision\">Google Cloud Vision<\/a>.<\/p>\n<p>Please review <a href=\"https:\/\/cloud.google.com\/vision\/docs\/pricing\">Pricing<\/a>\nbefore use, as a separate charge is incurred for each feature performed\non an image. When practical, caching of results is certainly recommended.<\/p>\n<p>The Cloud Vision API supports a variety of image file formats, including\nJPEG, PNG8, PNG24, Animated GIF (first frame only), and RAW.<\/p>\n<p>Cloud Vision sets upper limits on file size as well as on the total\ncombined size of all images in a request. Reducing your file size can\nsignificantly improve throughput; however, be careful not to reduce image\nquality in the process. See\n<a href=\"https:\/\/cloud.google.com\/vision\/docs\/best-practices#image_sizing\">Best Practices - Image Sizing<\/a>\nfor current file size limits.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Vision\\VisionClient;\n\n$vision = new VisionClient();\n\n$imageResource = fopen(__DIR__ . '\/assets\/family-photo.jpg', 'r');\n$image = $vision->image($imageResource, [\n    'FACE_DETECTION'\n]);"},{"caption":"<p>Images can be directly instantiated.<\/p>","code":"use Google\\Cloud\\Vision\\Image;\n\n$imageResource = fopen(__DIR__ . '\/assets\/family-photo.jpg', 'r');\n$image = new Image($imageResource, [\n    'FACE_DETECTION'\n]);"},{"caption":"<p>Image data can be given as a string<\/p>","code":"use Google\\Cloud\\Vision\\Image;\n\n$imageData = file_get_contents(__DIR__ .'\/assets\/family-photo.jpg');\n$image = new Image($imageData, [\n   'FACE_DETECTION'\n]);"},{"caption":"<p>Files stored in Google Cloud Storage can be used.<\/p>","code":"use Google\\Cloud\\Storage\\StorageClient;\nuse Google\\Cloud\\Vision\\Image;\n\n$storage = new StorageClient();\n$file = $storage->bucket('my-test-bucket')->object('family-photo.jpg');\n$image = new Image($file, [\n    'FACE_DETECTION'\n]);"},{"caption":"<p>This example sets a maximum results limit on one feature and provides some image context.<\/p>","code":"use Google\\Cloud\\Vision\\Image;\n\n$imageResource = fopen(__DIR__ . '\/assets\/family-photo.jpg', 'r');\n$image = new Image($imageResource, [\n    'FACE_DETECTION',\n    'LOGO_DETECTION'\n], [\n    'maxResults' => [\n        'FACE_DETECTION' => 1\n    ],\n    'imageContext' => [\n        'latLongRect' => [\n            'minLatLng' => [\n                'latitude' => '-45.0',\n                'longitude' => '-45.0'\n            ],\n            'maxLatLng' => [\n                'latitude' => '45.0',\n                'longitude' => '45.0'\n            ]\n        ]\n    ]\n]);"},{"caption":"<p>The client library also offers shortcut names which can be used in place of the longer feature names.<\/p>","code":"use Google\\Cloud\\Vision\\Image;\n\n$imageResource = fopen(__DIR__ . '\/assets\/family-photo.jpg', 'r');\n$image = new Image($imageResource, [\n    'faces',          \/\/ Corresponds to `FACE_DETECTION`\n    'landmarks',      \/\/ Corresponds to `LANDMARK_DETECTION`\n    'logos',          \/\/ Corresponds to `LOGO_DETECTION`\n    'labels',         \/\/ Corresponds to `LABEL_DETECTION`\n    'text',           \/\/ Corresponds to `TEXT_DETECTION`,\n    'document',       \/\/ Corresponds to `DOCUMENT_TEXT_DETECTION`\n    'safeSearch',     \/\/ Corresponds to `SAFE_SEARCH_DETECTION`\n    'imageProperties',\/\/ Corresponds to `IMAGE_PROPERTIES`\n    'crop',           \/\/ Corresponds to `CROP_HINTS`\n    'web'             \/\/ Corresponds to `WEB_DETECTION`\n]);"}],"resources":[{"title":"Best Practices","link":"https:\/\/cloud.google.com\/vision\/docs\/best-practices"},{"title":"Pricing","link":"https:\/\/cloud.google.com\/vision\/docs\/pricing"}],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Vision\/src\/Image.php#L233","description":"<p>Create an image with all required configuration.<\/p>","examples":[],"resources":[],"params":[{"name":"image","description":"<p>An image to configure with\nthe given settings. This parameter will accept a resource, a\nstring of bytes, the URI of an image in a publicly-accessible\nweb location, or an instance of <a data-custom-type=\"storage\/storageobject\">Google\\Cloud\\Storage\\StorageObject<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.resource.php\" target=\"_blank\">resource<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a data-custom-type=\"storage\/storageobject\">Google\\Cloud\\Storage\\StorageObject<\/a>"],"optional":false,"nullable":null},{"name":"features","description":"<p>A list of cloud vision\n<a href=\"https:\/\/cloud.google.com\/vision\/reference\/rest\/v1\/images\/annotate#type\">features<\/a>\nto apply to the image. Google Cloud Platform Client Library provides a set of abbreviated\nnames which can be used in the interest of brevity in place of\nthe names offered by the cloud vision service. These names are\n<code>faces<\/code>, <code>landmarks<\/code>, <code>logos<\/code>, <code>labels<\/code>, <code>text<\/code>, <code>document<\/code>,\n<code>safeSearch<\/code>, <code>imageProperties<\/code>, <code>crop<\/code>, and <code>web<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.maxResults","description":"<p>A list of features and the maximum number of results to return. Keys should correspond to feature names given in the <code>$features<\/code> array, and values should be of type int. In all cases where <code>$maxResults<\/code> does not contain a value for a feature, all results will be returned. In cases where a <code>$maxResults<\/code> value is specified, the cloud vision service will return results up to the <code>$maxResults<\/code> value, or the full results, whichever is fewer.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.imageContext","description":"<p>See <a href=\"https:\/\/cloud.google.com\/vision\/reference\/rest\/v1\/images\/annotate#imagecontext\">ImageContext<\/a> for full usage details.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":""}],"returns":[]},{"id":"requestObject","type":"instance","name":"requestObject","source":"Vision\/src\/Image.php#L289","description":"<p>Return a formatted annotate image request.<\/p>\n<p>This method is used internally by <a data-custom-type=\"vision\/visionclient\">Google\\Cloud\\Vision\\VisionClient<\/a>\nand is not generally intended for use outside of that context.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Vision\\Image;\n\n$imageResource = fopen(__DIR__ . '\/assets\/family-photo.jpg', 'r');\n$image = new Image($imageResource, [\n    'FACE_DETECTION'\n]);\n\n$requestObj = $image->requestObject();"}],"resources":[{"title":"AnnotateImageRequest","link":"https:\/\/cloud.google.com\/vision\/reference\/rest\/v1\/images\/annotate#annotateimagerequest"}],"params":[{"name":"encode","description":"<p>If set to true, image bytes will be base64-encoded\n(required for json\/rest requests)<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":""}]}]}