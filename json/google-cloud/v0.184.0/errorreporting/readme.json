{"id":"errorreporting\/readme","type":"guide","title":"Stackdriver Error Reporting for PHP","name":"Stackdriver Error Reporting for PHP","description":"<body>\n\n\n\n\n<p>Stackdriver Error Reporting counts, analyzes and aggregates the crashes in your running cloud services.<\/p>\n<h3>Installation<\/h3>\n<p>To begin, install the preferred dependency manager for PHP, <a href=\"https:\/\/getcomposer.org\/\">Composer<\/a>.<\/p>\n<p>Now to install just this component:<\/p>\n<pre><code class=\"language-sh\">$ composer require google\/cloud-error-reporting<\/code><\/pre>\n<p>Or to install the entire suite of components at once:<\/p>\n<pre><code class=\"language-sh\">$ composer require google\/cloud<\/code><\/pre>\n<p>This component supports both REST over HTTP\/1.1 and gRPC. In order to take advantage of the benefits offered by gRPC (such as streaming methods)\nplease see our <a href=\"https:\/\/cloud.google.com\/php\/grpc\">gRPC installation guide<\/a>.<\/p>\n<h3>Authentication<\/h3>\n<p>Please see our <a href=\"https:\/\/github.com\/googleapis\/google-cloud-php\/blob\/main\/AUTHENTICATION.md\">Authentication guide<\/a> for more information\non authenticating your client. Once authenticated, you'll be ready to start making requests.<\/p>\n<h3>Sample<\/h3>\n<p>The Stackdriver Error Reporting client provides APIs allowing you to easily configure your application to send errors and exceptions automatically to Stackdriver, or to manually report and manage errors and statistics.<\/p>\n<h4>Reporting errors from your application:<\/h4>\n<pre><code class=\"language-php\">require 'vendor\/autoload.php';\n\nuse Google\\Cloud\\ErrorReporting\\Bootstrap;\nuse Google\\Cloud\\Logging\\LoggingClient;\nuse Google\\Cloud\\Core\\Report\\SimpleMetadataProvider;\n\n$projectId = '[PROJECT]';\n$service = '[SERVICE_NAME]';\n$version = '[APP_VERSION]';\n\n$logging = new LoggingClient();\n$metadata = new SimpleMetadataProvider([], $projectId, $service, $version);\n$psrLogger = $logging-&gt;psrLogger('error-log', [\n    'metadataProvider' =&gt; $metadata\n]);\n\n\/\/ Register the logger as a PHP exception and error handler.\n\/\/ This will begin logging application exceptions and errors to Stackdriver.\nBootstrap::init($psrLogger);<\/code><\/pre>\n<h4>Using the Error Reporting API:<\/h4>\n<pre><code class=\"language-php\">require 'vendor\/autoload.php';\n\nuse Google\\Cloud\\ErrorReporting\\V1beta1\\ReportErrorsServiceClient;\nuse Google\\Cloud\\ErrorReporting\\V1beta1\\ReportedErrorEvent;\n\n$reportErrorsServiceClient = new ReportErrorsServiceClient();\n$formattedProjectName = $reportErrorsServiceClient-&gt;projectName('[PROJECT]');\n$event = new ReportedErrorEvent();\n\ntry {\n    $response = $reportErrorsServiceClient-&gt;reportErrorEvent($formattedProjectName, $event);\n} finally {\n    $reportErrorsServiceClient-&gt;close();\n}<\/code><\/pre>\n<h3>Version<\/h3>\n<p>This component is considered beta. As such, it should be expected to be mostly\nstable and we're working towards a release candidate. We will address issues\nand requests with a higher priority.<\/p>\n<h3>Next Steps<\/h3>\n<ol>\n<li>Understand the <a href=\"https:\/\/cloud.google.com\/error-reporting\/docs\/\">official documentation<\/a>.<\/li>\n<li>Take a look at <a href=\"https:\/\/github.com\/GoogleCloudPlatform\/php-docs-samples\/tree\/master\/error_reporting\">in-depth usage samples<\/a>.<\/li>\n<\/ol><\/body>","methods":[]}