{"id":"debugger\/daemon","type":"","title":"Google\\Cloud\\Debugger\\Daemon","name":"Daemon","description":"<p>This class is responsible for registering itself as a Debuggee with the\nStackdriver backend. It will fetch the list of breakpoints from the\nStackdriver backend, validate and normalize them, and store them into the\nconfigured breakpoint storage.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Debugger\\Daemon;\n\n$daemon = new Daemon();\n$daemon->run();"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Debugger\/src\/Daemon.php#L128","description":"<p>Creates a new Daemon instance.<\/p>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.sourceRoot","description":"<p>The full path to the source root. <strong>Defaults to<\/strong> the current working directory.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.clientConfig","description":"<p>The options to instantiate the default DebuggerClient. <a data-custom-type=\"debugger\/debuggerclient\" data-method=\"__construct\">Google\\Cloud\\Debugger\\DebuggerClient::__construct()<\/a> for the available options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.sourceContext","description":"<p>The source code identifier. <strong>Defaults to<\/strong> values autodetected from the environment.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.extSourceContext","description":"<p>The source code identifier. <strong>Defaults to<\/strong> the $sourceContext option.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.uniquifier","description":"<p>A string when uniquely identifies this debuggee. <strong>Defaults to<\/strong> a value autodetected from the environment.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.description","description":"<p>A display name for the debuggee in the Stackdriver Debugger UI. <strong>Defaults to<\/strong> a value autodetected from the environment.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.storage","description":"<p>The breakpoint storage mechanism to use. <strong>Defaults to<\/strong> a new SysvBreakpointStorage instance.<\/p>","types":["<a data-custom-type=\"debugger\/breakpointstorage\/breakpointstorageinterface\">Google\\Cloud\\Debugger\\BreakpointStorage\\BreakpointStorageInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.labels","description":"<p>A set of custom debuggee properties, populated by the agent, to be displayed to the user. <strong>Defaults to<\/strong> labels detected from the environment.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.metadataProvider","description":"<p><strong>Defaults to<\/strong> An automatically chosen provider, based on detected environment settings.<\/p>","types":["<a data-custom-type=\"core\/report\/metadataproviderinterface\">Google\\Cloud\\Core\\Report\\MetadataProviderInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.closureSerializer","description":"<p>An implementation responsible for serializing closures used in the <code>$clientConfig<\/code>. This is especially important when using the batch daemon. <strong>Defaults to<\/strong> <a data-custom-type=\"core\/batch\/opisclosureserializer\">Google\\Cloud\\Core\\Batch\\OpisClosureSerializer<\/a> if the <code>opis\/closure<\/code> library is installed.<\/p>","types":["<a data-custom-type=\"core\/batch\/closureserializerinterface\">Google\\Cloud\\Core\\Batch\\ClosureSerializerInterface<\/a>"],"optional":null,"nullable":null},{"name":"options.register","description":"<p>Whether to start the worker in the background using the BatchRunner. <strong>Defaults to<\/strong> false.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"run","type":"instance","name":"run","source":"Debugger\/src\/Daemon.php#L176","description":"<p>Main loop for the daemon. Fetches breakpoints from the DebuggerClient\nand stores them in shared storage for the application to read. This\nfunction runs indefinitely.<\/p>","examples":[{"caption":"","code":"$daemon->run();"}],"resources":[],"params":[],"exceptions":[],"returns":[]}]}