{"id":"debugger\/breakpoint","type":"","title":"Google\\Cloud\\Debugger\\Breakpoint","name":"Breakpoint","description":"<p>This plain PHP class represents a debugger breakpoint resource.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Debugger\\Breakpoint;\n\n$breakpoint = new Breakpoint([\n    'id' => 'breakpoint-id',\n    'action' => Breakpoint::ACTION_CAPTURE,\n    'location' => [\n        'path' => '\/path\/to\/file.php',\n        'line' => 10\n    ]\n]);"}],"resources":[{"title":"Breakpoint model documentation","link":"https:\/\/cloud.google.com\/debugger\/api\/reference\/rest\/v2\/debugger.debuggees.breakpoints#Breakpoint"}],"methods":[{"id":"id","type":"instance","name":"id","source":"Debugger\/src\/Breakpoint.php#L294","description":"<p>Return the breakpoint id.<\/p>","examples":[{"caption":"","code":"echo $breakpoint->id();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"action","type":"instance","name":"action","source":"Debugger\/src\/Breakpoint.php#L309","description":"<p>Return the type of breakpoint.<\/p>","examples":[{"caption":"","code":"echo $breakpoint->action();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"location","type":"instance","name":"location","source":"Debugger\/src\/Breakpoint.php#L324","description":"<p>Return the source location for this breakpoint.<\/p>","examples":[{"caption":"","code":"$location = $breakpoint->location();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"debugger\/sourcelocation\">Google\\Cloud\\Debugger\\SourceLocation<\/a>"],"description":""}]},{"id":"condition","type":"instance","name":"condition","source":"Debugger\/src\/Breakpoint.php#L339","description":"<p>Return the condition for this breakpoint.<\/p>","examples":[{"caption":"","code":"echo $breakpoint->condition();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"logLevel","type":"instance","name":"logLevel","source":"Debugger\/src\/Breakpoint.php#L354","description":"<p>Returns the log level for this breakpoint.<\/p>","examples":[{"caption":"","code":"echo $breakpoint->logLevel();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"logMessageFormat","type":"instance","name":"logMessageFormat","source":"Debugger\/src\/Breakpoint.php#L369","description":"<p>Return the log message format for this breakpoint.<\/p>","examples":[{"caption":"","code":"echo $breakpoint->logMessageFormat();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"expressions","type":"instance","name":"expressions","source":"Debugger\/src\/Breakpoint.php#L384","description":"<p>Return the expressions to evaluate for this breakpoint.<\/p>","examples":[{"caption":"","code":"$expressions = $breakpoint->expressions();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>"],"description":""}]},{"id":"stackFrames","type":"instance","name":"stackFrames","source":"Debugger\/src\/Breakpoint.php#L399","description":"<p>Return the list of collected stack frames<\/p>","examples":[{"caption":"","code":"$stackFrames = $breakpoint->stackFrames();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"debugger\/stackframe\">Google\\Cloud\\Debugger\\StackFrame[]<\/a>"],"description":""}]},{"id":"status","type":"instance","name":"status","source":"Debugger\/src\/Breakpoint.php#L409","description":"<p>Return the status for this breakpoint<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"debugger\/statusmessage\">Google\\Cloud\\Debugger\\StatusMessage<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"variableTable","type":"instance","name":"variableTable","source":"Debugger\/src\/Breakpoint.php#L424","description":"<p>Returns the VariableTable<\/p>","examples":[{"caption":"","code":"$variableTable = $breakpoint->variableTable();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"debugger\/variabletable\">Google\\Cloud\\Debugger\\VariableTable<\/a>"],"description":""}]},{"id":"finalize","type":"instance","name":"finalize","source":"Debugger\/src\/Breakpoint.php#L509","description":"<p>Mark this breakpoint as final state and record the current timestamp.<\/p>","examples":[{"caption":"","code":"$breakpoint->finalize();"}],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"addStackFrames","type":"instance","name":"addStackFrames","source":"Debugger\/src\/Breakpoint.php#L535","description":"<p>Add collected data to this breakpoint.<\/p>","examples":[{"caption":"","code":"$breakpoint->addStackFrames([\n    [\n        'filename' => '\/path\/to\/file.php',\n        'line' => 10\n    ]\n]);\n$stackFrames = $breakpoint->stackFrames();"}],"resources":[],"params":[{"name":"stackFrames","description":"<p>Array of stackframe data.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"addStackFrame","type":"instance","name":"addStackFrame","source":"Debugger\/src\/Breakpoint.php#L562","description":"<p>Add single stackframe of data to this breakpoint.<\/p>","examples":[{"caption":"","code":"$breakpoint->addStackFrame([\n    'filename' => '\/path\/to\/file.php',\n    'line' => 10\n]);\n$stackFrames = $breakpoint->stackFrames();"}],"resources":[],"params":[{"name":"stackFrameData","description":"<p>Stackframe information.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"stackFrameData.function","description":"<p>The name of the function executed.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"stackFrameData.filename","description":"<p>The name of the file executed.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"stackFrameData.line","description":"<p>The line number of the file executed.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"stackFrameData.locals","description":"<p>Captured local variables<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"addEvaluatedExpressions","type":"instance","name":"addEvaluatedExpressions","source":"Debugger\/src\/Breakpoint.php#L606","description":"<p>Add evaluated expression results to this breakpoint.<\/p>","examples":[{"caption":"","code":"$breakpoint->addEvaluatedExpressions([\n    '2 + 3' => '5',\n    '$foo' => 'variable value'\n]);"}],"resources":[],"params":[{"name":"expressions","description":"<p>Key is the expression executed. Value is the\nexecution result.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"validate","type":"instance","name":"validate","source":"Debugger\/src\/Breakpoint.php#L631","description":"<p>Validate that this breakpoint can be executed. If not valid, the status\nfield will be populated with the corresponding error message. This\nvalidation does not guarantee that the breakpoint will be reachable.<\/p>\n<p>The primary use case is to reject clearly invalid breakpoints and return\na message to the developer via the Debugger console.<\/p>","examples":[{"caption":"","code":"$valid = $breakpoint->validate();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"resolveLocation","type":"instance","name":"resolveLocation","source":"Debugger\/src\/Breakpoint.php#L652","description":"<p>Attempts to resolve the real (full) path to the specified source\nlocation. Returns true if a location was resolved.<\/p>","examples":[{"caption":"","code":"$found = $breakpoint->resolveLocation();"}],"resources":[],"params":[{"name":"resolver","description":"<p><strong>Defaults to<\/strong> a\nresolver that uses the current include path.<\/p>","types":["<a data-custom-type=\"debugger\/sourcelocationresolver\">Google\\Cloud\\Debugger\\SourceLocationResolver<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]}]}