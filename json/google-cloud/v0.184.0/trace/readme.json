{"id":"trace\/readme","type":"guide","title":"Stackdriver Trace for PHP","name":"Stackdriver Trace for PHP","description":"<body>\n\n\n\n\n<p>A distributed tracing system for Google Cloud Platform that collects latency\ndata from App Engine applications and displays it in near real time in the\nGoogle Cloud Platform Console.<\/p>\n<h3>Installation<\/h3>\n<p>To begin, install the preferred dependency manager for PHP,\n<a href=\"https:\/\/getcomposer.org\/\">Composer<\/a>.<\/p>\n<p>Now to install just this component:<\/p>\n<pre><code class=\"language-sh\">$ composer require google\/cloud-trace<\/code><\/pre>\n<p>Or to install the entire suite of components at once:<\/p>\n<pre><code class=\"language-sh\">$ composer require google\/cloud<\/code><\/pre>\n<p>This component supports both REST over HTTP\/1.1 and gRPC. In order to take\nadvantage of the benefits offered by gRPC (such as streaming methods)\nplease see our <a href=\"https:\/\/cloud.google.com\/php\/grpc\">gRPC installation guide<\/a>.<\/p>\n<h3>Authentication<\/h3>\n<p>Please see our <a href=\"https:\/\/github.com\/googleapis\/google-cloud-php\/blob\/main\/AUTHENTICATION.md\">Authentication guide<\/a>\nfor more information on authenticating your client. Once authenticated, you'll\nbe ready to start making requests.<\/p>\n<h3>Sample<\/h3>\n<pre><code class=\"language-php\">require 'vendor\/autoload.php';\n\nuse Google\\Cloud\\Trace\\TraceClient;\n\n$traceClient = new TraceClient();\n\n\/\/ Create a Trace\n$trace = $traceClient-&gt;trace();\n$span = $trace-&gt;span([\n    'name' =&gt; 'main'\n]);\n$span-&gt;setStartTime();\n\/\/ some expensive operation\n$span-&gt;setEndTime();\n\n$trace-&gt;setSpans([$span]);\n$traceClient-&gt;insert($trace);\n\n\/\/ List recent Traces\nforeach($traceClient-&gt;traces() as $trace) {\n    var_dump($trace-&gt;traceId());\n}<\/code><\/pre>\n<h3>Creating a Trace<\/h3>\n<pre><code class=\"language-php\">use Google\\Cloud\\Trace\\TraceClient;\n\n$client = new TraceClient();\n$trace = $client-&gt;trace();\n$span = $trace-&gt;span(['name' =&gt; 'main']);\n$trace-&gt;setSpans([$span]);\n\n$client-&gt;insert($trace);<\/code><\/pre>\n<h3>Using OpenCensus<\/h3>\n<p>We highly recommend using the <a href=\"http:\/\/opencensus.io\">OpenCensus<\/a> project to instrument\nyour application. OpenCensus is an open source, distributed tracing framework\nthat maintains integrations with popular frameworks and tools. OpenCensus\nprovides a data exporter for Stackdriver Trace which uses this library. If you\nwere using google\/cloud-trace &lt;= v0.3.3 or google\/cloud  &lt;= 0.46.0, then check\nout the <a href=\"http:\/\/opencensus.io\/opencensus-php\/migrating-stackdriver-trace\">migration guide to OpenCensus<\/a>.<\/p>\n<p>Install with <code>composer<\/code> or add to your <code>composer.json<\/code>.<\/p>\n<pre><code class=\"language-sh\">$ composer require opencensus\/opencensus opencensus\/opencensus-exporter-stackdriver<\/code><\/pre>\n<p><code>opencensus\/opencensus<\/code> provides a service-agnostic implementation. Be sure to\nalso require <code>opencensus\/opencensus-exporter-stackdriver<\/code> to enable exporting of\ntraces to Stackdriver Trace.<\/p>\n<pre><code class=\"language-php\">use OpenCensus\\Trace\\Exporter\\StackdriverExporter;\nuse OpenCensus\\Trace\\Tracer;\n\nTracer::start(new StackdriverExporter());<\/code><\/pre>\n<p>See the <a href=\"https:\/\/github.com\/census-instrumentation\/opencensus-php\">OpenCensus documentation<\/a> for more configuration\noptions and features.<\/p>\n<h3>Version<\/h3>\n<p>This component is considered GA (generally available). As such, it will not introduce backwards-incompatible changes in\nany minor or patch releases. We will address issues and requests with the highest priority.<\/p>\n<h3>Next Steps<\/h3>\n<ol>\n<li>Understand the <a href=\"https:\/\/cloud.google.com\/trace\/docs\/\">official documentation<\/a>.<\/li>\n<li>Take a look at <a href=\"https:\/\/github.com\/GoogleCloudPlatform\/php-docs-samples\/tree\/master\/trace\/\">in-depth usage samples<\/a>.<\/li>\n<\/ol><\/body>","methods":[]}