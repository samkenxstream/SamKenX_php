{"id":"spanner\/structtype","type":"","title":"Google\\Cloud\\Spanner\\StructType","name":"StructType","description":"<p>Represents a Struct Query Parameter type declaration.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Spanner\\StructType;\nuse Google\\Cloud\\Spanner\\Database;\nuse Google\\Cloud\\Spanner\\SpannerClient;\n\n$spanner = new SpannerClient();\n$database = $spanner->connect('my-instance', 'my-database');\n\n$res = $database->execute('SELECT @userStruct.firstName, @userStruct.lastName', [\n    'parameters' => [\n        'userStruct' => [\n            'firstName' => 'John',\n            'lastName' => 'Testuser'\n        ]\n    ],\n    'types' => [\n        'userStruct' => (new StructType())\n            ->add('firstName', Database::TYPE_STRING)\n            ->add('lastName', Database::TYPE_STRING)\n    ]\n])->rows()->current();\n\n$fullName = $res['firstName'] . ' ' . $res['lastName']; \/\/ `John Testuser`"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Spanner\/src\/StructType.php#L79","description":"","examples":[{"caption":"","code":"use Google\\Cloud\\Spanner\\ArrayType;\nuse Google\\Cloud\\Spanner\\Database;\nuse Google\\Cloud\\Spanner\\StructType;\n\n$structType = new StructType([\n    [\n        'name' => 'stringField',\n        'type' => Database::TYPE_STRING\n    ],\n    [\n        'name' => 'arrayField',\n        'type' => Database::TYPE_ARRAY,\n        'child' => new ArrayType(Database::TYPE_STRING)\n    ]\n]);"}],"resources":[],"params":[{"name":"fields","description":"<p>An array containing a field definition. Each field\nmust be of form <code>[(string|null) $name, (int) $type, (ArrayType|StructType|null) $child]<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array[]<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"add","type":"instance","name":"add","source":"Spanner\/src\/StructType.php#L141","description":"<p>Add a struct field definition.<\/p>\n<p>Unnamed struct fields may be defined by providing <code>null<\/code> as the first\nargument value, however you may find it more convenient to use the provided\n<a data-custom-type=\"spanner\/structtype\" data-method=\"addUnnamed\">Google\\Cloud\\Spanner\\StructType::addUnnamed()<\/a> method.<\/p>","examples":[{"caption":"","code":"$structType->add('firstName', Database::TYPE_STRING);"},{"caption":"<p>If a field is a struct or array, it must be explicitly defined.<\/p>","code":"use Google\\Cloud\\Spanner\\ArrayType;\nuse Google\\Cloud\\Spanner\\Database;\nuse Google\\Cloud\\Spanner\\StructType;\n\n\/\/ Create a struct which will be nested later.\n$customer = (new StructType)\n    ->add('name', Database::TYPE_STRING)\n    ->add('phone', Database::TYPE_STRING)\n    ->add('email', Database::TYPE_STRING)\n    ->add('lastOrderDate', Database::TYPE_DATE);\n\n\/\/ Create an array to nest within the customer type definition.\n$orderIds = new ArrayType(Database::TYPE_INT64);\n$customer->add('orderIds', $orderIds);\n\n\/\/ Add the customer definition to the parameter definition.\n$structType->add('customer', $customer);"}],"resources":[],"params":[{"name":"name","description":"<p>The field name.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"optional":false,"nullable":null},{"name":"type","description":"<p>$type A value type code or nested\nstruct or array definition. Accepted integer values are defined as\nconstants on <a data-custom-type=\"spanner\/database\">Google\\Cloud\\Spanner\\Database<\/a>, and are as\nfollows: <code>Database::TYPE_BOOL<\/code>, <code>Database::TYPE_INT64<\/code>,\n<code>Database::TYPE_FLOAT64<\/code>, <code>Database::TYPE_TIMESTAMP<\/code>,\n<code>Database::TYPE_DATE<\/code>, <code>Database::TYPE_STRING<\/code> and\n<code>Database::TYPE_BYTES<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a data-custom-type=\"spanner\/arraytype\">Google\\Cloud\\Spanner\\ArrayType<\/a>","<a data-custom-type=\"spanner\/structtype\">Google\\Cloud\\Spanner\\StructType<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"If an invalid type is provided."}],"returns":[{"types":["<a data-custom-type=\"spanner\/structtype\">Google\\Cloud\\Spanner\\StructType<\/a>"],"description":"<p>The current instance, for chaining additional field\ndefinitions.<\/p>"}]},{"id":"addUnnamed","type":"instance","name":"addUnnamed","source":"Spanner\/src\/StructType.php#L199","description":"<p>Add a struct field with no name.<\/p>","examples":[{"caption":"","code":"$structType->addUnnamed(Database::TYPE_STRING);"}],"resources":[],"params":[{"name":"type","description":"<p>$type A value type code or nested\nstruct or array definition. Accepted integer values are defined as\nconstants on <a data-custom-type=\"spanner\/database\">Google\\Cloud\\Spanner\\Database<\/a>, and are as\nfollows: <code>Database::TYPE_BOOL<\/code>, <code>Database::TYPE_INT64<\/code>,\n<code>Database::TYPE_FLOAT64<\/code>, <code>Database::TYPE_TIMESTAMP<\/code>,\n<code>Database::TYPE_DATE<\/code>, <code>Database::TYPE_STRING<\/code> and\n<code>Database::TYPE_BYTES<\/code><\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>","<a data-custom-type=\"spanner\/arraytype\">Google\\Cloud\\Spanner\\ArrayType<\/a>","<a data-custom-type=\"spanner\/structtype\">Google\\Cloud\\Spanner\\StructType<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"If an invalid type is provided."}],"returns":[{"types":["<a data-custom-type=\"spanner\/structtype\">Google\\Cloud\\Spanner\\StructType<\/a>"],"description":"<p>The current instance, for chaining additional field\ndefinitions.<\/p>"}]}]}