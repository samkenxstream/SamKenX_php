{"id":"spanner\/session\/cachesessionpool","type":"","title":"Google\\Cloud\\Spanner\\Session\\CacheSessionPool","name":"CacheSessionPool","description":"<p>This session pool implementation accepts a PSR-6 compatible cache\nimplementation and utilizes it to store sessions between requests.<\/p>\n<p>We provide <code>Google\\Auth\\Cache\\SysVCacheItemPool<\/code>, which is a fast PSR-6\nimplementation in <code>google\/auth<\/code> library. If your PHP has <code>sysvshm<\/code>\nextension enabled (most binary distributions have it compiled in), consider\nusing it.<\/p>\n<p>Please note that when\n<a data-custom-type=\"spanner\/session\/cachesessionpool\" data-method=\"acquire\">Google\\Cloud\\Spanner\\Session\\CacheSessionPool::acquire()<\/a> is called at\nmost only a single session is created. Due to this, it is possible to sit\nunder the minimum session value declared when constructing this instance. In\norder to have the pool match the minimum session value please use the\n<a data-custom-type=\"spanner\/session\/cachesessionpool\" data-method=\"warmup\">Google\\Cloud\\Spanner\\Session\\CacheSessionPool::warmup()<\/a> method. This\nwill create as many sessions as needed to match the minimum value, and is the\nrecommended way to bootstrap the session pool.<\/p>\n<p>Sessions are created on demand up to the maximum session value set during\ninstantiation of the pool. To help ensure the minimum number of sessions\nrequired are managed by the pool, attempts will be made to automatically\ndownsize after every 10 minute window. This feature is configurable and one\nmay also downsize at their own choosing via\n<a data-custom-type=\"spanner\/session\/cachesessionpool\" data-method=\"downsize\">Google\\Cloud\\Spanner\\Session\\CacheSessionPool::downsize()<\/a>. Downsizing\nwill help ensure you never run into issues where the Spanner backend is\nlocked up after having met the maximum number of sessions assigned per node.\nFor reference, the current maximum sessions per database per node is 10k. For\nmore information on limits please see\n<a href=\"https:\/\/cloud.google.com\/spanner\/docs\/limits\">here<\/a>.<\/p>\n<p>When expecting a long period of inactivity (such as a\nmaintenance window), please make sure to call\n<a data-custom-type=\"spanner\/session\/cachesessionpool\" data-method=\"clear\">Google\\Cloud\\Spanner\\Session\\CacheSessionPool::clear()<\/a> in order to\ndelete any active sessions.<\/p>\n<p>If you're on Windows, or your PHP doesn't have <code>sysvshm<\/code> extension,\nunfortunately you can not use <code>Google\\Auth\\Cache\\SysVCacheItemPool<\/code>. In such\ncases, it will be necessary to include a separate dependency to fulfill\nthis requirement. The below example makes use of\n<a href=\"https:\/\/github.com\/symfony\/cache\">Symfony's Cache Component<\/a>. For more\nimplementations please see the <a href=\"https:\/\/packagist.org\/providers\/psr\/cache-implementation\">Packagist PHP Package\nRepository<\/a>.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Spanner\\SpannerClient;\nuse Google\\Cloud\\Spanner\\Session\\CacheSessionPool;\nuse Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter;\n\n$spanner = new SpannerClient();\n$cache = new FilesystemAdapter();\n$sessionPool = new CacheSessionPool($cache);\n\n$database = $spanner->connect('my-instance', 'my-database', [\n    'sessionPool' => $sessionPool\n]);"},{"caption":"<p>Labels configured on the pool will be applied to each session created by the pool.<\/p>","code":"use Google\\Cloud\\Spanner\\Session\\CacheSessionPool;\nuse Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter;\n\n$cache = new FilesystemAdapter();\n$sessionPool = new CacheSessionPool($cache, [\n    'labels' => [\n        'environment' => getenv('APPLICATION_ENV')\n    ]\n]);"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Spanner\/src\/Session\/CacheSessionPool.php#L191","description":"","examples":[],"resources":[],"params":[{"name":"cacheItemPool","description":"<p>A PSR-6 compatible cache\nimplementation used to store the session data.<\/p>","types":["<a href=\"https:\/\/github.com\/php-fig\/cache\/tree\/1.0.1\/src\/CacheItemPoolInterface.php\" target=\"_blank\">Psr\\Cache\\CacheItemPoolInterface<\/a>"],"optional":false,"nullable":null},{"name":"config","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"config.maxSessions","description":"<p>The maximum number of sessions to store in the pool. <strong>Defaults to<\/strong> <code>500<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"config.minSessions","description":"<p>The minimum number of sessions to store in the pool. <strong>Defaults to<\/strong> <code>1<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"config.shouldWaitForSession","description":"<p>If the pool is full, whether to block until a new session is available. *<em>Defaults to<\/em> <code>true<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"config.maxCyclesToWaitForSession","description":"<p>The maximum number cycles to wait for a session before throwing an exception. <strong>Defaults to<\/strong> <code>30<\/code>. Ignored when $shouldWaitForSession is <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"config.sleepIntervalSeconds","description":"<p>The sleep interval between cycles. <strong>Defaults to<\/strong> <code>0.5<\/code>. Ignored when $shouldWaitForSession is <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.float.php\" target=\"_blank\">float<\/a>"],"optional":null,"nullable":null},{"name":"config.lock","description":"<p>A lock implementation capable of blocking. <strong>Defaults to<\/strong> a semaphore based implementation if the required extensions are installed, otherwise an flock based implementation.<\/p>","types":["<a data-custom-type=\"core\/lock\/lockinterface\">Google\\Cloud\\Core\\Lock\\LockInterface<\/a>"],"optional":null,"nullable":null},{"name":"config.shouldAutoDownsize","description":"<p>Determines whether or not to automatically attempt to downsize the pool after every 10 minute window. <strong>Defaults to<\/strong> <code>true<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"config.labels","description":"<p>Labels to be applied to each session created in the pool. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: <code>[a-z]([-a-z0-9]*[a-z0-9])?<\/code>. Label values must be between 0 and 63 characters long and must conform to the regular expression <code>([a-z]([-a-z0-9]*[a-z0-9])?)?<\/code>. No more than 64 labels can be associated with a given session. See <a href=\"https:\/\/goo.gl\/xmQnxf\">https:\/\/goo.gl\/xmQnxf<\/a> for more information on and examples of labels.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":""}],"returns":[]},{"id":"acquire","type":"instance","name":"acquire","source":"Spanner\/src\/Session\/CacheSessionPool.php#L206","description":"<p>Acquire a session from the pool.<\/p>","examples":[],"resources":[],"params":[{"name":"context","description":"<p>The type of session to fetch. May be either <code>r<\/code>\n(READ) or <code>rw<\/code> (READ\/WRITE). <strong>Defaults to<\/strong> <code>r<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\RuntimeException","description":""}],"returns":[{"types":["<a data-custom-type=\"spanner\/session\/session\">Google\\Cloud\\Spanner\\Session\\Session<\/a>"],"description":""}]},{"id":"release","type":"instance","name":"release","source":"Spanner\/src\/Session\/CacheSessionPool.php#L312","description":"<p>Release a session back to the pool.<\/p>","examples":[],"resources":[],"params":[{"name":"session","description":"<p>The session.<\/p>","types":["<a data-custom-type=\"spanner\/session\/session\">Google\\Cloud\\Spanner\\Session\\Session<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"keepAlive","type":"instance","name":"keepAlive","source":"Spanner\/src\/Session\/CacheSessionPool.php#L343","description":"<p>Keeps a checked out session alive.<\/p>\n<p>In use sessions that have not had their <code>lastActive<\/code> time updated\nin the last 20 minutes will be considered eligible to be moved back into\nthe queue if the max sessions value has been met. In order to work around\nthis when performing a large streaming execute or read call please make\nsure to call this method roughly every 15 minutes between reading rows\nto keep your session active.<\/p>","examples":[],"resources":[],"params":[{"name":"session","description":"<p>The session to keep alive.<\/p>","types":["<a data-custom-type=\"spanner\/session\/session\">Google\\Cloud\\Spanner\\Session\\Session<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"downsize","type":"instance","name":"downsize","source":"Spanner\/src\/Session\/CacheSessionPool.php#L369","description":"<p>Downsizes the queue of available sessions by the given percentage. This is\nrelative to the minimum sessions value. For example: Assuming a full\nqueue, with maximum sessions of 10 and a minimum of 2, downsizing by 50%\nwould leave 6 sessions in the queue. The count of items to be deleted will\nbe rounded up in the case of a fraction.<\/p>\n<p>Please note this method will attempt to synchronously delete sessions and\nwill block until complete.<\/p>","examples":[],"resources":[],"params":[{"name":"percent","description":"<p>The percentage to downsize the pool by. Must be\nbetween 1 and 100.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvaldArgumentException","description":""}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":"<p>The number of sessions removed from the pool.<\/p>"}]},{"id":"warmup","type":"instance","name":"warmup","source":"Spanner\/src\/Session\/CacheSessionPool.php#L411","description":"<p>Create enough sessions to meet the minimum session constraint.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":"<p>The number of sessions created and added to the queue.<\/p>"}]},{"id":"clear","type":"instance","name":"clear","source":"Spanner\/src\/Session\/CacheSessionPool.php#L465","description":"<p>Clear the cache and attempt to delete all sessions in the pool.<\/p>\n<p>A session may be removed from the cache, but still tracked as active by\nthe Spanner backend if a delete operation failed. To ensure you do not\nexceed the maximum number of sessions available per node, please be sure\nto check the return value of this method to be certain all sessions have\nbeen deleted.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"setDatabase","type":"instance","name":"setDatabase","source":"Spanner\/src\/Session\/CacheSessionPool.php#L484","description":"<p>Set the database used to make calls to manage sessions.<\/p>","examples":[],"resources":[],"params":[{"name":"database","description":"<p>The database.<\/p>","types":["<a data-custom-type=\"spanner\/database\">Google\\Cloud\\Spanner\\Database<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"cacheItemPool","type":"instance","name":"cacheItemPool","source":"Spanner\/src\/Session\/CacheSessionPool.php#L505","description":"<p>Get the underlying cache implementation.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/github.com\/php-fig\/cache\/tree\/1.0.1\/src\/CacheItemPoolInterface.php\" target=\"_blank\">Psr\\Cache\\CacheItemPoolInterface<\/a>"],"description":""}]},{"id":"maintain","type":"instance","name":"maintain","source":"Spanner\/src\/Session\/CacheSessionPool.php#L864","description":"<p>Maintain queued sessions for selected database and keep them alive.<\/p>\n<p>This method drops expired sessions and refreshes &quot;old&quot; ones (expiring in next 10 minutes).\nIt can also refresh some non-&quot;old&quot; sessions to distribute refresh calls more or less\nevenly between maintenance calls.\nOnly up to <code>minSessions<\/code> sessions are maintained, all excess ones are left to expire.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]}]}