{"id":"spanner\/transaction","type":"","title":"Google\\Cloud\\Spanner\\Transaction","name":"Transaction","description":"<p>Manages interaction with Cloud Spanner inside a Transaction.<\/p>\n<p>Transactions can be started via\n<a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a> (recommended) or via\n<a data-custom-type=\"spanner\/database\" data-method=\"transaction\">Google\\Cloud\\Spanner\\Database::transaction()<\/a>. Transactions should\nalways call <a data-custom-type=\"spanner\/transaction\" data-method=\"commit\">Google\\Cloud\\Spanner\\Transaction::commit()<\/a> or\n<a data-custom-type=\"spanner\/transaction\" data-method=\"rollback\">Google\\Cloud\\Spanner\\Transaction::rollback()<\/a> to ensure that locks are\nreleased in a timely manner.<\/p>\n<p>If you do not plan on performing any writes in your transaction, a\n<a data-custom-type=\"spanner\/snapshot\">Google\\Cloud\\Spanner\\Snapshot<\/a> is a better solution which does not\nrequire a commit or rollback and does not lock any data.<\/p>\n<p>Transactions may raise <a data-custom-type=\"core\/exception\/abortedexception\">Google\\Cloud\\Core\\Exception\\AbortedException<\/a> errors\nwhen the transaction cannot complete for any reason. In this case, the entire\noperation (all reads and writes) should be reapplied atomically. Google Cloud\nPHP handles this transparently when using\n<a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a>. In other cases, it is\nhighly recommended that applications implement their own retry logic.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Spanner\\SpannerClient;\n\n$spanner = new SpannerClient();\n\n$database = $spanner->connect('my-instance', 'my-database');\n\n$database->runTransaction(function (Transaction $t) {\n    \/\/ do stuff.\n\n    $t->commit();\n});"},{"caption":"<p>Get a transaction to manage manually.<\/p>","code":"$transaction = $database->transaction();"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Spanner\/src\/Transaction.php#L94","description":"","examples":[],"resources":[],"params":[{"name":"operation","description":"<p>The Operation instance.<\/p>","types":["<a data-custom-type=\"spanner\/operation\">Google\\Cloud\\Spanner\\Operation<\/a>"],"optional":false,"nullable":null},{"name":"session","description":"<p>The session to use for spanner interactions.<\/p>","types":["<a data-custom-type=\"spanner\/session\/session\">Google\\Cloud\\Spanner\\Session\\Session<\/a>"],"optional":false,"nullable":null},{"name":"transactionId","description":"<p>The Transaction ID. If no ID is\nprovided, the Transaction will be a Single-Use Transaction.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":true,"nullable":null},{"name":"isRetry","description":"<p>Whether the transaction will automatically retry or not.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":false,"nullable":null},{"name":"tag","description":"<p>A transaction tag. Requests made using this transaction will\nuse this as the transaction tag.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"if a tag is specified on a single-use transaction."}],"returns":[]},{"id":"getCommitStats","type":"instance","name":"getCommitStats","source":"Spanner\/src\/Transaction.php#L133","description":"<p>Get the commit stats for this transaction. Commit stats are only available after commit has been called with\n<code>return_commit_stats<\/code> =&gt; true. If commit is called multiple times, only the commitStats for the last commit will\nbe available.<\/p>","examples":[{"caption":"","code":"$transaction->commit([\"returnCommitStats\" => true]);\n$commitStats = $transaction->getCommitStats();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p>The commit stats<\/p>"}]},{"id":"insert","type":"instance","name":"insert","source":"Spanner\/src\/Transaction.php#L154","description":"<p>Enqueue an insert mutation.<\/p>","examples":[{"caption":"","code":"$transaction->insert('Posts', [\n    'ID' => 10,\n    'title' => 'My New Post',\n    'content' => 'Hello World'\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to insert into.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The data to insert.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"insertBatch","type":"instance","name":"insertBatch","source":"Spanner\/src\/Transaction.php#L177","description":"<p>Enqueue one or more insert mutations.<\/p>","examples":[{"caption":"","code":"$transaction->insertBatch('Posts', [\n    [\n        'ID' => 10,\n        'title' => 'My New Post',\n        'content' => 'Hello World'\n    ]\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to insert into.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The data to insert.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"update","type":"instance","name":"update","source":"Spanner\/src\/Transaction.php#L200","description":"<p>Enqueue an update mutation.<\/p>","examples":[{"caption":"","code":"$transaction->update('Posts', [\n    'ID' => 10,\n    'title' => 'My New Post [Updated!]',\n    'content' => 'Modified Content'\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The data to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"updateBatch","type":"instance","name":"updateBatch","source":"Spanner\/src\/Transaction.php#L223","description":"<p>Enqueue one or more update mutations.<\/p>","examples":[{"caption":"","code":"$transaction->updateBatch('Posts', [\n    [\n        'ID' => 10,\n        'title' => 'My New Post [Updated!]',\n        'content' => 'Modified Content'\n    ]\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The data to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"insertOrUpdate","type":"instance","name":"insertOrUpdate","source":"Spanner\/src\/Transaction.php#L246","description":"<p>Enqueue an insert or update mutation.<\/p>","examples":[{"caption":"","code":"$transaction->insertOrUpdate('Posts', [\n    'ID' => 10,\n    'title' => 'My New Post',\n    'content' => 'Hello World'\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to insert into or update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The data to insert or update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"insertOrUpdateBatch","type":"instance","name":"insertOrUpdateBatch","source":"Spanner\/src\/Transaction.php#L269","description":"<p>Enqueue one or more insert or update mutations.<\/p>","examples":[{"caption":"","code":"$transaction->insertOrUpdateBatch('Posts', [\n    [\n        'ID' => 10,\n        'title' => 'My New Post',\n        'content' => 'Hello World'\n    ]\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to insert into or update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The data to insert or update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"replace","type":"instance","name":"replace","source":"Spanner\/src\/Transaction.php#L292","description":"<p>Enqueue an replace mutation.<\/p>","examples":[{"caption":"","code":"$transaction->replace('Posts', [\n    'ID' => 10,\n    'title' => 'My New Post [Replaced]',\n    'content' => 'Hello Moon'\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to replace into.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The data to replace.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"replaceBatch","type":"instance","name":"replaceBatch","source":"Spanner\/src\/Transaction.php#L315","description":"<p>Enqueue one or more replace mutations.<\/p>","examples":[{"caption":"","code":"$transaction->replaceBatch('Posts', [\n    [\n        'ID' => 10,\n        'title' => 'My New Post [Replaced]',\n        'content' => 'Hello Moon'\n    ]\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to replace into.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The data to replace.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"delete","type":"instance","name":"delete","source":"Spanner\/src\/Transaction.php#L338","description":"<p>Enqueue an delete mutation.<\/p>","examples":[{"caption":"","code":"$keySet = new KeySet([\n    'keys' => [10]\n]);\n\n$transaction->delete('Posts', $keySet);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"keySet","description":"<p>The KeySet to identify rows to delete.<\/p>","types":["<a data-custom-type=\"spanner\/keyset\">Google\\Cloud\\Spanner\\KeySet<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"executeUpdate","type":"instance","name":"executeUpdate","source":"Spanner\/src\/Transaction.php#L431","description":"<p>Execute a Cloud Spanner DML statement.<\/p>\n<p>Data Manipulation Language (DML) allows you to execute statements which\nmodify the state of the database (i.e. inserting, updating or deleting\nrows). DML supports INSERT, UPDATE and DELETE statements. For\nmore on DML syntax, visit the\n<a href=\"https:\/\/cloud.google.com\/spanner\/docs\/dml-syntax\">DML syntax guide<\/a>.<\/p>\n<p>To execute a SQL query (such as a SELECT), use\n<a data-custom-type=\"spanner\/transaction\" data-method=\"execute\">Google\\Cloud\\Spanner\\Transaction::execute()<\/a>.<\/p>\n<p>Mutations performed via DML will be visible to subsequent operations\nwithin the same transaction. In other words, unlike with other mutation\nmethods provided, you can read your uncommitted writes. If a transaction\nis not committed (either because of a rollback or error), the DML writes\nwill not be applied.<\/p>","examples":[{"caption":"","code":"$modifiedRowCount = $transaction->executeUpdate('UPDATE Posts SET content = @content WHERE id = @id', [\n    'parameters' => [\n        'content' => 'Hello world!',\n        'id' => 10\n    ]\n]);"},{"caption":"<p>Example of executeUpdate while using DML Structs<\/p>","code":"$statement = \"UPDATE Posts SET title = 'Updated Title' \" .\n    \"WHERE STRUCT<Title STRING, Content STRING>(Title, Content) = @post\";\n\n$postValue = new StructValue();\n$postValue->add('Title', 'Updated Title')\n          ->add('Content', 'Sample Content');\n\n$postType = new StructType();\n$postType->add('Title', Database::TYPE_STRING)\n         ->add('Content', Database::TYPE_STRING);\n\n$modifiedRowCount = $transaction->executeUpdate($statement, [\n    'parameters' => [\n        'post' => $postValue\n    ],\n    'types' => [\n        'post' => $postType\n    ]\n]);"}],"resources":[{"title":"ExecuteSqlRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.ExecuteSqlRequest"},{"title":"DML Syntax Guide","link":"https:\/\/cloud.google.com\/spanner\/docs\/dml-syntax"}],"params":[{"name":"sql","description":"<p>The query string to execute.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.parameters","description":"<p>A key\/value array of Query Parameters, where the key is represented in the query string prefixed by a <code>@<\/code> symbol.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.types","description":"<p>A key\/value array of Query Parameter types. Generally, Google Cloud PHP can infer types. Explicit type declarations are required in the case of struct parameters, or when a null value exists as a parameter. Accepted values for primitive types are defined as constants on <a data-custom-type=\"spanner\/database\">Google\\Cloud\\Spanner\\Database<\/a>, and are as follows: <code>Database::TYPE_BOOL<\/code>, <code>Database::TYPE_INT64<\/code>, <code>Database::TYPE_FLOAT64<\/code>, <code>Database::TYPE_TIMESTAMP<\/code>, <code>Database::TYPE_DATE<\/code>, <code>Database::TYPE_STRING<\/code>, <code>Database::TYPE_BYTES<\/code>. If the value is an array, use <a data-custom-type=\"spanner\/arraytype\">Google\\Cloud\\Spanner\\ArrayType<\/a> to declare the array parameter types. Likewise, for structs, use <a data-custom-type=\"spanner\/structtype\">Google\\Cloud\\Spanner\\StructType<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.requestOptions","description":"<p>Request options. For more information on available options, please see <a href=\"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rest\/v1\/RequestOptions\">the upstream documentation<\/a>. Please note, if using the <code>priority<\/code> setting you may utilize the constants available on <a data-custom-type=\"spanner\/v1\/requestoptions\/priority\">Google\\Cloud\\Spanner\\V1\\RequestOptions\\Priority<\/a> to set a value. Please note, the <code>transactionTag<\/code> setting will be ignored as the transaction tag should have already been set when creating the transaction.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":"<p>The number of rows modified.<\/p>"}]},{"id":"executeUpdateBatch","type":"instance","name":"executeUpdateBatch","source":"Spanner\/src\/Transaction.php#L530","description":"<p>Execute multiple DML statements.<\/p>\n<p>This method allows many statements to be run with lower latency than\nsubmitting them sequentially with\n<a data-custom-type=\"spanner\/transaction\" data-method=\"executeUpdate\">Google\\Cloud\\Spanner\\Transaction::executeUpdate()<\/a>.<\/p>\n<p>Statements are executed in order, sequentially. Execution will stop at\nthe first failed statement; the remaining statements will not be run.<\/p>\n<p>Please note that in the case of failure of any provided statement, this\nmethod will NOT throw an exception. Rather, check the <code>successful<\/code> key\nin the returned array. If <code>successful<\/code> is false, some statements may have\nbeen applied; you must inspect the <code>results<\/code> key in the returned array to\nfind the first failed statement. Error details are returned inline with\nthe first failed statement. Subsequent statements after an error will\nnever be applied.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Spanner\\Database;\n\n$res = $transaction->executeUpdateBatch([\n    [\n        'sql' => 'UPDATE posts SET post_status = @status WHERE author_id = @authorId',\n        'parameters' => [\n            'status' => 'unpublished',\n            'authorId' => 1\n        ]\n    ], [\n        'sql' => 'UPDATE authors SET author_permissions = @permissions WHERE author_id = @authorId',\n        'parameters' => [\n            'permissions' => null,\n            'authorId' => 1\n        ],\n        'types' => [\n            'permissions' => Database::TYPE_ARRAY\n        ]\n    ]\n]);\n\nif ($res->error()) {\n    echo 'An error occurred: ' . $res->error()['status']['message'];\n} else {\n    echo 'Updated ' . array_sum($res->rowCounts()) . ' row(s) ' .\n         'across ' . count($res->rowCounts()) . ' statement(s)';\n}"}],"resources":[{"title":"ExecuteBatchDmlRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.ExecuteBatchDmlRequest"}],"params":[{"name":"statements","description":"<p>A list of DML statements to run. Each statement\nmust contain a <code>sql<\/code> key, where the value is a DML string. If the\nDML contains placeholders, values are provided as a key\/value array\nin key <code>parameters<\/code>. If parameter types are required, they must be\nprovided in key <code>types<\/code>. Generally, Google Cloud PHP can\ninfer types. Explicit type declarations are required in the case\nof struct parameters, or when a null value exists as a parameter.\nAccepted values for primitive types are defined as constants on\n<a data-custom-type=\"spanner\/database\">Google\\Cloud\\Spanner\\Database<\/a>, and are as follows:\n<code>Database::TYPE_BOOL<\/code>, <code>Database::TYPE_INT64<\/code>,\n<code>Database::TYPE_FLOAT64<\/code>, <code>Database::TYPE_TIMESTAMP<\/code>,\n<code>Database::TYPE_DATE<\/code>, <code>Database::TYPE_STRING<\/code>,\n<code>Database::TYPE_BYTES<\/code>. If the value is an array, use\n<a data-custom-type=\"spanner\/arraytype\">Google\\Cloud\\Spanner\\ArrayType<\/a> to declare the array\nparameter types. Likewise, for structs, use\n<a data-custom-type=\"spanner\/structtype\">Google\\Cloud\\Spanner\\StructType<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.requestOptions","description":"<p>Request options. For more information on available options, please see <a href=\"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rest\/v1\/RequestOptions\">the upstream documentation<\/a>. Please note, if using the <code>priority<\/code> setting you may utilize the constants available on <a data-custom-type=\"spanner\/v1\/requestoptions\/priority\">Google\\Cloud\\Spanner\\V1\\RequestOptions\\Priority<\/a> to set a value. Please note, the <code>transactionTag<\/code> setting will be ignored as the transaction tag should have already been set when creating the transaction.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"If any statement is missing the `sql` key."}],"returns":[{"types":["<a data-custom-type=\"spanner\/batchdmlresult\">Google\\Cloud\\Spanner\\BatchDmlResult<\/a>"],"description":""}]},{"id":"rollback","type":"instance","name":"rollback","source":"Spanner\/src\/Transaction.php#L565","description":"<p>Roll back a transaction.<\/p>\n<p>Rolls back a transaction, releasing any locks it holds. It is a good idea\nto call this for any transaction that includes one or more Read or\nExecuteSql requests and ultimately decides not to commit.<\/p>\n<p>This closes the transaction, preventing any future API calls inside it.<\/p>\n<p>Rollback will NOT error if the transaction is not found or was already aborted.<\/p>","examples":[{"caption":"","code":"$transaction->rollback();"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"commit","type":"instance","name":"commit","source":"Spanner\/src\/Transaction.php#L612","description":"<p>Commit and end the transaction.<\/p>\n<p>It is advised that transactions be run inside\n<a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a> in order to take\nadvantage of automated transaction retry in case of a transaction aborted\nerror.<\/p>","examples":[{"caption":"","code":"$transaction->commit();"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.mutations","description":"<p>An array of mutations to commit. May be used instead of or in addition to enqueing mutations separately.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.returnCommitStats","description":"<p>If true, commit statistics will be returned and accessible via <a data-custom-type=\"spanner\/transaction\" data-method=\"getCommitStats\">Google\\Cloud\\Spanner\\Transaction::getCommitStats()<\/a>. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.requestOptions","description":"<p>Request options. For more information on available options, please see <a href=\"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rest\/v1\/RequestOptions\">the upstream documentation<\/a>. Please note, if using the <code>priority<\/code> setting you may utilize the constants available on <a data-custom-type=\"spanner\/v1\/requestoptions\/priority\">Google\\Cloud\\Spanner\\V1\\RequestOptions\\Priority<\/a> to set a value. Please note, the <code>requestTag<\/code> setting will be ignored as it is not supported for commit requests.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\BadMethodCall","description":"If the transaction is not active or already used."},{"type":"\\Google\\Cloud\\Core\\Exception\\AbortedException","description":"If the commit is aborted for any reason."}],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit timestamp.<\/p>"}]},{"id":"state","type":"instance","name":"state","source":"Spanner\/src\/Transaction.php#L661","description":"<p>Retrieve the Transaction State.<\/p>\n<p>Will be one of <code>Transaction::STATE_ACTIVE<\/code>,\n<code>Transaction::STATE_COMMITTED<\/code>, or <code>Transaction::STATE_ROLLED_BACK<\/code>.<\/p>","examples":[{"caption":"","code":"$state = $transaction->state();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"isRetry","type":"instance","name":"isRetry","source":"Spanner\/src\/Transaction.php#L684","description":"<p>Check whether the current transaction is a retry transaction.<\/p>\n<p>When using <a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a>,\ntransactions are automatically retried when a conflict causes it to abort.\nIn such cases, subsequent invocations of the transaction callable will\nprovide a transaction where <code>$transaction-&gt;isRetry()<\/code> is true. This can\nbe useful for debugging and understanding how code is working.<\/p>","examples":[{"caption":"","code":"if ($transaction->isRetry()) {\n    echo 'This is a retry transaction!';\n}"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"execute","type":"instance","name":"execute","source":"Spanner\/src\/TransactionalReadTrait.php#L265","description":"<p>Run a query.<\/p>\n<p>Google Cloud PHP will infer parameter types for all primitive types and\nall values implementing <a data-custom-type=\"spanner\/valueinterface\">Google\\Cloud\\Spanner\\ValueInterface<\/a>, with\nthe exception of <code>null<\/code>. Non-associative arrays will be interpreted as\na Spanner ARRAY type, and must contain only a single type of value.\nAssociative arrays or values of type <a data-custom-type=\"spanner\/structvalue\">Google\\Cloud\\Spanner\\StructValue<\/a>\nwill be interpreted as Spanner STRUCT type. Structs MUST always explicitly\ndefine their field types.<\/p>\n<p>In any case where the value of a parameter may be <code>null<\/code>, you MUST\nexplicitly define the parameter's type.<\/p>\n<p>With the exception of arrays and structs, types are defined using a type\nconstant defined on <a data-custom-type=\"spanner\/database\">Google\\Cloud\\Spanner\\Database<\/a>. Examples include\nbut are not limited to <code>Database::TYPE_STRING<\/code> and <code>Database::TYPE_INT64<\/code>.<\/p>\n<p>Arrays, when explicitly typing, should use an instance of\n<a data-custom-type=\"spanner\/arraytype\">Google\\Cloud\\Spanner\\ArrayType<\/a> to declare their type and the types\nof any values contained within the array elements.<\/p>\n<p>Structs must always declare their type using an instance of\n<a data-custom-type=\"spanner\/structtype\">Google\\Cloud\\Spanner\\StructType<\/a>. Struct values may be expressed as\nan associative array, however if the struct contains any unnamed fields,\nor any fields with duplicate names, the struct must be expressed using an\ninstance of <a data-custom-type=\"spanner\/structvalue\">Google\\Cloud\\Spanner\\StructValue<\/a>. Struct value types\nmay be inferred with the same caveats as top-level parameters (in other\nwords, so long as they are not nullable and do not contain nested structs).<\/p>\n\nImplemented in <a data-custom-type=\"spanner\/transactionalreadtrait\">Google\\Cloud\\Spanner\\TransactionalReadTrait<\/a>","examples":[{"caption":"","code":"$result = $transaction->execute('SELECT * FROM Posts WHERE ID = @postId', [\n    'parameters' => [\n        'postId' => 1337\n    ]\n]);\n\n$firstRow = $result->rows()->current();"},{"caption":"<p>Parameters which may be null must include an expected parameter type.<\/p>","code":"use Google\\Cloud\\Spanner\\Database;\nuse Google\\Cloud\\Spanner\\Timestamp;\n\n$values = [\n    new Timestamp(new \\DateTimeImmutable),\n    null\n];\n\n$result = $transaction->execute('SELECT @timestamp as timestamp', [\n    'parameters' => [\n        'timestamp' => array_rand($values)\n    ],\n    'types' => [\n        'timestamp' => Database::TYPE_TIMESTAMP\n    ]\n]);\n\n$timestamp = $result->rows()->current()['timestamp'];"},{"caption":"<p>Array parameters which may be null or empty must include the array value type.<\/p>","code":"use Google\\Cloud\\Spanner\\ArrayType;\nuse Google\\Cloud\\Spanner\\Database;\n\n$result = $transaction->execute('SELECT @emptyArrayOfIntegers as numbers', [\n    'parameters' => [\n        'emptyArrayOfIntegers' => []\n    ],\n    'types' => [\n        'emptyArrayOfIntegers' => new ArrayType(Database::TYPE_INT64)\n    ]\n]);\n\n$row = $result->rows()->current();\n$emptyArray = $row['numbers'];"},{"caption":"<p>Struct parameters provide a type definition. Fields within a Struct may be inferred following the same rules as top-level parameters. Any nested structs must be an instance of <code>Google\\Cloud\\Spanner\\StructType<\/code>, and any values which could be of type <code>null<\/code> must explicitly specify their type.<\/p>","code":"use Google\\Cloud\\Spanner\\Database;\nuse Google\\Cloud\\Spanner\\StructType;\n\n$result = $transaction->execute('SELECT @userStruct.firstName, @userStruct.lastName', [\n    'parameters' => [\n        'userStruct' => [\n            'firstName' => 'John',\n            'lastName' => 'Testuser'\n        ]\n    ],\n    'types' => [\n        'userStruct' => (new StructType())\n            ->add('firstName', Database::TYPE_STRING)\n            ->add('lastName', Database::TYPE_STRING)\n    ]\n]);\n\n$row = $result->rows()->current();\n$fullName = $row['firstName'] . ' ' . $row['lastName']; \/\/ `John Testuser`"},{"caption":"<p>If a struct contains unnamed fields, or multiple fields with the same name, it must be defined using <a data-custom-type=\"spanner\/structvalue\">Google\\Cloud\\Spanner\\StructValue<\/a>.<\/p>","code":"use Google\\Cloud\\Spanner\\Database;\nuse Google\\Cloud\\Spanner\\Result;\nuse Google\\Cloud\\Spanner\\StructValue;\nuse Google\\Cloud\\Spanner\\StructType;\n\n$res = $transaction->execute('SELECT * FROM UNNEST(ARRAY(SELECT @structParam))', [\n    'parameters' => [\n        'structParam' => (new StructValue)\n            ->add('foo', 'bar')\n            ->add('foo', 2)\n            ->addUnnamed('this field is unnamed')\n    ],\n    'types' => [\n        'structParam' => (new StructType)\n            ->add('foo', Database::TYPE_STRING)\n            ->add('foo', Database::TYPE_INT64)\n            ->addUnnamed(Database::TYPE_STRING)\n    ]\n])->rows(Result::RETURN_NAME_VALUE_PAIR)->current();\n\necho $res[0]['name'] . ': ' . $res[0]['value'] . PHP_EOL; \/\/ \"foo: bar\"\necho $res[1]['name'] . ': ' . $res[1]['value'] . PHP_EOL; \/\/ \"foo: 2\"\necho $res[2]['name'] . ': ' . $res[2]['value'] . PHP_EOL; \/\/ \"2: this field is unnamed\""}],"resources":[{"title":"ExecuteStreamingSqlRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.ExecuteStreamingSqlRequest"}],"params":[{"name":"sql","description":"<p>The query string to execute.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.\nSee <a href=\"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rpc\/google.spanner.v1#google.spanner.v1.TransactionOptions\">TransactionOptions<\/a>\nfor detailed description of available transaction options. Please\nnote that only one of <code>$strong<\/code>, <code>$minReadTimestamp<\/code>,\n<code>$maxStaleness<\/code>, <code>$readTimestamp<\/code> or <code>$exactStaleness<\/code> may be set in\na request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.parameters","description":"<p>A key\/value array of Query Parameters, where the key is represented in the query string prefixed by a <code>@<\/code> symbol.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.types","description":"<p>A key\/value array of Query Parameter types. Generally, Google Cloud PHP can infer types. Explicit type declarations are required in the case of struct parameters, or when a null value exists as a parameter. Accepted values for primitive types are defined as constants on <a data-custom-type=\"spanner\/database\">Google\\Cloud\\Spanner\\Database<\/a>, and are as follows: <code>Database::TYPE_BOOL<\/code>, <code>Database::TYPE_INT64<\/code>, <code>Database::TYPE_FLOAT64<\/code>, <code>Database::TYPE_TIMESTAMP<\/code>, <code>Database::TYPE_DATE<\/code>, <code>Database::TYPE_STRING<\/code>, <code>Database::TYPE_BYTES<\/code>. If the value is an array, use <a data-custom-type=\"spanner\/arraytype\">Google\\Cloud\\Spanner\\ArrayType<\/a> to declare the array parameter types. Likewise, for structs, use <a data-custom-type=\"spanner\/structtype\">Google\\Cloud\\Spanner\\StructType<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.queryOptions","description":"<p>Query optimizer configuration.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.queryOptions.optimizerVersion","description":"<p>An option to control the selection of optimizer version. This parameter allows individual queries to pick different query optimizer versions. Specifying &quot;latest&quot; as a value instructs Cloud Spanner to use the latest supported query optimizer version. If not specified, Cloud Spanner uses optimizer version set at the client level options or set by the <code>SPANNER_OPTIMIZER_VERSION<\/code> environment variable. Any other positive integer (from the list of supported optimizer versions) overrides the default optimizer version for query execution. Executing a SQL statement with an invalid optimizer version will fail with a syntax error (<code>INVALID_ARGUMENT<\/code>) status.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.requestOptions","description":"<p>Request options. For more information on available options, please see <a href=\"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rest\/v1\/RequestOptions\">the upstream documentation<\/a>. Please note, if using the <code>priority<\/code> setting you may utilize the constants available on <a data-custom-type=\"spanner\/v1\/requestoptions\/priority\">Google\\Cloud\\Spanner\\V1\\RequestOptions\\Priority<\/a> to set a value. Please note, the <code>transactionTag<\/code> setting will be ignored as the transaction tag should have already been set when creating the transaction.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/result\">Google\\Cloud\\Spanner\\Result<\/a>"],"description":""}]},{"id":"read","type":"instance","name":"read","source":"Spanner\/src\/TransactionalReadTrait.php#L328","description":"<p>Lookup rows in a table.<\/p>\n\nImplemented in <a data-custom-type=\"spanner\/transactionalreadtrait\">Google\\Cloud\\Spanner\\TransactionalReadTrait<\/a>","examples":[{"caption":"","code":"use Google\\Cloud\\Spanner\\KeySet;\n\n$keySet = new KeySet([\n    'keys' => [1337]\n]);\n\n$columns = ['ID', 'title', 'content'];\n\n$result = $transaction->read('Posts', $keySet, $columns);\n\n$firstRow = $result->rows()->current();"}],"resources":[{"title":"ReadRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.ReadRequest"}],"params":[{"name":"table","description":"<p>The table name.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"keySet","description":"<p>The KeySet to select rows.<\/p>","types":["<a data-custom-type=\"spanner\/keyset\">Google\\Cloud\\Spanner\\KeySet<\/a>"],"optional":false,"nullable":null},{"name":"columns","description":"<p>A list of column names to return.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.index","description":"<p>The name of an index on the table.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.limit","description":"<p>The number of results to return.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.requestOptions","description":"<p>Request options. For more information on available options, please see <a href=\"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rest\/v1\/RequestOptions\">the upstream documentation<\/a>. Please note, if using the <code>priority<\/code> setting you may utilize the constants available on <a data-custom-type=\"spanner\/v1\/requestoptions\/priority\">Google\\Cloud\\Spanner\\V1\\RequestOptions\\Priority<\/a> to set a value. Please note, the <code>transactionTag<\/code> setting will be ignored as the transaction tag should have already been set when creating the transaction.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/result\">Google\\Cloud\\Spanner\\Result<\/a>"],"description":""}]},{"id":"id","type":"instance","name":"id","source":"Spanner\/src\/TransactionalReadTrait.php#L361","description":"<p>Retrieve the Transaction ID.<\/p>\n\nImplemented in <a data-custom-type=\"spanner\/transactionalreadtrait\">Google\\Cloud\\Spanner\\TransactionalReadTrait<\/a>","examples":[{"caption":"","code":"$id = $transaction->id();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]}]}