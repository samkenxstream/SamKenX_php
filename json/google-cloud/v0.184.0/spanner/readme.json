{"id":"spanner\/readme","type":"guide","title":"Google Cloud Spanner for PHP","name":"Google Cloud Spanner for PHP","description":"<body>\n\n\n\n\n<p>A fully managed, mission-critical, relational database service that offers transactional consistency at global scale,\nschemas, SQL (ANSI 2011 with extensions), and automatic, synchronous replication for high availability.<\/p>\n<h3>Installation<\/h3>\n<p>To begin, install the preferred dependency manager for PHP, <a href=\"https:\/\/getcomposer.org\/\">Composer<\/a>.<\/p>\n<p>Now to install just this component:<\/p>\n<pre><code class=\"language-sh\">$ composer require google\/cloud-spanner<\/code><\/pre>\n<p>Or to install the entire suite of components at once:<\/p>\n<pre><code class=\"language-sh\">$ composer require google\/cloud<\/code><\/pre>\n<p>This component requires the gRPC extension. Please see our <a href=\"https:\/\/cloud.google.com\/php\/grpc\">gRPC installation guide<\/a>\nfor more information on how to configure the extension.<\/p>\n<h3>Authentication<\/h3>\n<p>Please see our <a href=\"https:\/\/github.com\/googleapis\/google-cloud-php\/blob\/main\/AUTHENTICATION.md\">Authentication guide<\/a> for more information\non authenticating your client. Once authenticated, you'll be ready to start making requests.<\/p>\n<h3>Sample<\/h3>\n<pre><code class=\"language-php\">require 'vendor\/autoload.php';\n\nuse Google\\Cloud\\Spanner\\SpannerClient;\n\n$spanner = new SpannerClient();\n\n$db = $spanner-&gt;connect('my-instance', 'my-database');\n\n$userQuery = $db-&gt;execute('SELECT * FROM Users WHERE id = @id', [\n    'parameters' =&gt; [\n        'id' =&gt; $userId\n    ]\n]);\n\n$user = $userQuery-&gt;rows()-&gt;current();\n\necho 'Hello ' . $user['firstName'];<\/code><\/pre>\n<h3>Session warmup<\/h3>\n<p>To issue a query against the Spanner service, the client library needs to request a session id from the server under the cover. This API call will add significant latency to your program. The Spanner client library provides a handy way to alleviate this problem by having a cached session pool.<\/p>\n<p>For more details, see: <a href=\"https:\/\/github.com\/googleapis\/google-cloud-php\/blob\/main\/Spanner\/src\/Session\/CacheSessionPool.php#L30\">https:\/\/github.com\/googleapis\/google-cloud-php\/blob\/main\/Spanner\/src\/Session\/CacheSessionPool.php#L30<\/a><\/p>\n<p>The following example shows how to use the <code>CacheSessionPool<\/code> with <code>SysVCacheItemPool<\/code> as well as how to configure a proper cache for authentication:<\/p>\n<pre><code class=\"language-php\">require __DIR__ . '\/vendor\/autoload.php';\n\nuse Google\\Cloud\\Spanner\\SpannerClient;\nuse Google\\Cloud\\Spanner\\Session\\CacheSessionPool;\nuse Google\\Auth\\Cache\\SysVCacheItemPool;\n\n$authCache = new SysVCacheItemPool();\n$sessionCache = new SysVCacheItemPool([\n    \/\/ Use a different project identifier for ftok than the default\n    'proj' =&gt; 'B'\n]);\n\n$spanner = new SpannerClient([\n    'authCache' =&gt; $authCache\n]);\n\n$sessionPool = new CacheSessionPool(\n    $sessionCache,\n    [\n        'minSessions' =&gt; 10,\n        'maxSessions' =&gt; 10  \/\/ Here it will create 10 sessions under the cover.\n    ]\n);\n\n$database = $spanner-&gt;connect(\n    'my-instance',\n    'my-db',\n    [\n        'sessionPool' =&gt; $sessionPool\n    ]\n);\n\/\/ `warmup` will actually create the sessions for the first time.\n$sessionPool-&gt;warmup();<\/code><\/pre>\n<p>By using a cache implementation like <code>SysVCacheItemPool<\/code>, you can share the cached sessions among multiple processes, so that for example, you can warmup the session upon the server startup, then all the other PHP processes will benefit from the warmed up sessions.<\/p>\n<h3>Version<\/h3>\n<p>This component is considered GA (generally available). As such, it will not introduce backwards-incompatible changes in\nany minor or patch releases. We will address issues and requests with the highest priority.<\/p>\n<h3>Next Steps<\/h3>\n<ol>\n<li>Understand the <a href=\"https:\/\/cloud.google.com\/spanner\/docs\/\">official documentation<\/a>.<\/li>\n<li>Take a look at <a href=\"https:\/\/github.com\/GoogleCloudPlatform\/php-docs-samples\/tree\/master\/spanner\/\">in-depth usage samples<\/a>.<\/li>\n<\/ol><\/body>","methods":[]}