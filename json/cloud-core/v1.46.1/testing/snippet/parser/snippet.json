{"id":"core\/testing\/snippet\/parser\/snippet","type":"","title":"Google\\Cloud\\Core\\Testing\\Snippet\\Parser\\Snippet","name":"Snippet","description":"<p>Represents a single code snippet<\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L51","description":"<p>Create a snippet<\/p>","examples":[],"resources":[],"params":[{"name":"identifier","description":"<p>The snippet ID<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"config","description":"<p>The snippet config<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"identifier","type":"instance","name":"identifier","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L72","description":"<p>A unique identifier for the snippet.<\/p>\n<p>This identifier is deterministic and will remain constant unless the\nsnippet is modified or moved.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"file","type":"instance","name":"file","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L82","description":"<p>The file in which the snippet is found.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"fqn","type":"instance","name":"fqn","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L92","description":"<p>The Snippet fully-qualified name.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"line","type":"instance","name":"line","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L105","description":"<p>The line number where the snippet's method or class is declared.<\/p>\n<p>Note that this is NOT the line number where the snippet is declared. It\nindicates the method or class which the snippet annotates.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"content","type":"instance","name":"content","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L115","description":"<p>The snippet content.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"index","type":"instance","name":"index","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L125","description":"<p>The Snippet Index<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"name","type":"instance","name":"name","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L135","description":"<p>The snippet name<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]},{"id":"invoke","type":"instance","name":"invoke","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L145","description":"<p>Eval the snippet and return the result.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.mixed\" target=\"_blank\">mixed<\/a>"],"description":""}]},{"id":"addLocal","type":"instance","name":"addLocal","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L187","description":"<p>Add a local variable to make available in the snippet execution scope.<\/p>","examples":[],"resources":[],"params":[{"name":"name","description":"<p>The variable name<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"value","description":"<p>The variable value<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.mixed\" target=\"_blank\">mixed<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"addUse","type":"instance","name":"addUse","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L198","description":"<p>Add a <code>use<\/code> statement for a class.<\/p>","examples":[],"resources":[],"params":[{"name":"name","description":"<p>The class name to import.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"setLine","type":"instance","name":"setLine","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L218","description":"<p>Replace a line with new code.<\/p>\n<p>Hopefully this is obvious, but be careful using this, and only use it\nwhen no other feasible options present themselves. It's pretty easy to\nmake your test useless when you're overwriting the thing you are trying\nto test.<\/p>\n<p>This is provided for cases when a snippet relies on a global, or on\nsomething else which can not be overridden or mocked.<\/p>","examples":[],"resources":[],"params":[{"name":"line","description":"<p>The line number (0-indexed) to replace.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null},{"name":"content","description":"<p>The PHP code to inject.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"insertAfterLine","type":"instance","name":"insertAfterLine","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L241","description":"<p>Inject new code after a given line.<\/p>\n<p>Hopefully this is obvious, but be careful using this, and only use it\nwhen no other feasible options present themselves. It's pretty easy to\nmake your test useless when you're modifying the thing you are trying\nto test.<\/p>\n<p>This is provided for cases when a snippet relies on a global, or on\nsomething else which can not be overridden or mocked.<\/p>","examples":[],"resources":[],"params":[{"name":"line","description":"<p>The line number (0-indexed) to write in after.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":false,"nullable":null},{"name":"content","description":"<p>The PHP code to inject.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"replace","type":"instance","name":"replace","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L264","description":"<p>Replace a string in the snippet with a new one.<\/p>\n<p>Hopefully this is obvious, but be careful using this, and only use it\nwhen no other feasible options present themselves. It's pretty easy to\nmake your test useless when you're modifying the thing you are trying\nto test.<\/p>\n<p>This is provided for cases when a snippet relies on a global, or on\nsomething else which can not be overridden or mocked.<\/p>","examples":[],"resources":[],"params":[{"name":"old","description":"<p>The string to be replaced.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"new","description":"<p>The new string to insert.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"regexReplace","type":"instance","name":"regexReplace","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L284","description":"<p>Find something with a regex and replace it.<\/p>\n<p>Hopefully this is obvious, but be careful using this, and only use it\nwhen no other feasible options present themselves. It's pretty easy to\nmake your test useless when you're modifying the thing you are trying\nto test.<\/p>\n<p>This is provided for cases when a snippet relies on a global, or on\nsomething else which can not be overridden or mocked.<\/p>","examples":[],"resources":[],"params":[{"name":"pattern","description":"<p>The regex pattern to search for.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"new","description":"<p>The new string to insert.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"jsonSerialize","type":"instance","name":"jsonSerialize","source":"Core\/src\/Testing\/Snippet\/Parser\/Snippet.php#L294","description":"<p>Serialize to json<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":""}]}]}